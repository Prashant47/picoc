cscope 15 $HOME/prasann/picoc/cstdlib               0000191413
	@ctype.c

2 
	~<˘y≥.h
>

3 
	~"../öãΩªãr.h
"

5 #i‚de‡
BUILTIN_MINI_STDLIB


7 
	$StdIß um
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

9 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`iß um
(
P¨am
[0]->Val->Integer);

10 
	}
}

12 
	$StdIßÕha
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

14 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`ißÕha
(
P¨am
[0]->Val->Integer);

15 
	}
}

17 
	$StdIsbœnk
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

19 
ch
 = 
P¨am
[0]->
VÆ
->
I¡egî
;

20 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = (
ch
 == ' ') | (ch == '\t');

21 
	}
}

23 
	$StdIs˙ål
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

25 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`is˙ål
(
P¨am
[0]->Val->Integer);

26 
	}
}

28 
	$StdIsdigô
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

30 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`isdigô
(
P¨am
[0]->Val->Integer);

31 
	}
}

33 
	$StdIsgøph
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

35 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`isgøph
(
P¨am
[0]->Val->Integer);

36 
	}
}

38 
	$StdI¶owî
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

40 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`i¶owî
(
P¨am
[0]->Val->Integer);

41 
	}
}

43 
	$StdI•röt
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

45 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`i•röt
(
P¨am
[0]->Val->Integer);

46 
	}
}

48 
	$StdI•un˘
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

50 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`i•un˘
(
P¨am
[0]->Val->Integer);

51 
	}
}

53 
	$StdIs•a˚
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

55 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`is•a˚
(
P¨am
[0]->Val->Integer);

56 
	}
}

58 
	$StdIsuµî
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

60 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`isuµî
(
P¨am
[0]->Val->Integer);

61 
	}
}

63 
	$StdIsxdigô
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

65 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`isxdigô
(
P¨am
[0]->Val->Integer);

66 
	}
}

68 
	$StdTﬁowî
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

70 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`tﬁowî
(
P¨am
[0]->Val->Integer);

71 
	}
}

73 
	$StdTouµî
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

75 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`touµî
(
P¨am
[0]->Val->Integer);

76 
	}
}

78 
	$StdIßscii
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

80 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`ißscii
(
P¨am
[0]->Val->Integer);

81 
	}
}

83 
	$StdTﬂscii
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

85 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`tﬂscii
(
P¨am
[0]->Val->Integer);

86 
	}
}

89 
LibøryFun˘i⁄
 
	gStdCty≥Fun˘i⁄s
[] =

91 { 
StdIß um
, "int isalnum(int);" },

92 { 
StdIßÕha
, "int isalpha(int);" },

93 { 
StdIsbœnk
, "int isblank(int);" },

94 { 
StdIs˙ål
, "int iscntrl(int);" },

95 { 
StdIsdigô
, "int isdigit(int);" },

96 { 
StdIsgøph
, "int isgraph(int);" },

97 { 
StdI¶owî
, "int islower(int);" },

98 { 
StdI•röt
, "int isprint(int);" },

99 { 
StdI•un˘
, "int ispunct(int);" },

100 { 
StdIs•a˚
, "int isspace(int);" },

101 { 
StdIsuµî
, "int isupper(int);" },

102 { 
StdIsxdigô
, "int isxdigit(int);" },

103 { 
StdTﬁowî
, "intÅolower(int);" },

104 { 
StdTouµî
, "intÅoupper(int);" },

105 { 
StdIßscii
, "int isascii(int);" },

106 { 
StdTﬂscii
, "intÅoascii(int);" },

107 { 
NULL
, NULL }

	@errno.c

2 
	~<î∫o.h
>

3 
	~"../öãΩªãr.h
"

5 #i‚de‡
BUILTIN_MINI_STDLIB


7 #ifde‡
EACCES


8 
	gEACCESVÆue
 = 
EACCES
;

11 #ifde‡
EADDRINUSE


12 
	gEADDRINUSEVÆue
 = 
EADDRINUSE
;

15 #ifde‡
EADDRNOTAVAIL


16 
	gEADDRNOTAVAILVÆue
 = 
EADDRNOTAVAIL
;

19 #ifde‡
EAFNOSUPPORT


20 
	gEAFNOSUPPORTVÆue
 = 
EAFNOSUPPORT
;

23 #ifde‡
EAGAIN


24 
	gEAGAINVÆue
 = 
EAGAIN
;

27 #ifde‡
EALREADY


28 
	gEALREADYVÆue
 = 
EALREADY
;

31 #ifde‡
EBADF


32 
	gEBADFVÆue
 = 
EBADF
;

35 #ifde‡
EBADMSG


36 
	gEBADMSGVÆue
 = 
EBADMSG
;

39 #ifde‡
EBUSY


40 
	gEBUSYVÆue
 = 
EBUSY
;

43 #ifde‡
ECANCELED


44 
	gECANCELEDVÆue
 = 
ECANCELED
;

47 #ifde‡
ECHILD


48 
	gECHILDVÆue
 = 
ECHILD
;

51 #ifde‡
ECONNABORTED


52 
	gECONNABORTEDVÆue
 = 
ECONNABORTED
;

55 #ifde‡
ECONNREFUSED


56 
	gECONNREFUSEDVÆue
 = 
ECONNREFUSED
;

59 #ifde‡
ECONNRESET


60 
	gECONNRESETVÆue
 = 
ECONNRESET
;

63 #ifde‡
EDEADLK


64 
	gEDEADLKVÆue
 = 
EDEADLK
;

67 #ifde‡
EDESTADDRREQ


68 
	gEDESTADDRREQVÆue
 = 
EDESTADDRREQ
;

71 #ifde‡
EDOM


72 
	gEDOMVÆue
 = 
EDOM
;

75 #ifde‡
EDQUOT


76 
	gEDQUOTVÆue
 = 
EDQUOT
;

79 #ifde‡
EEXIST


80 
	gEEXISTVÆue
 = 
EEXIST
;

83 #ifde‡
EFAULT


84 
	gEFAULTVÆue
 = 
EFAULT
;

87 #ifde‡
EFBIG


88 
	gEFBIGVÆue
 = 
EFBIG
;

91 #ifde‡
EHOSTUNREACH


92 
	gEHOSTUNREACHVÆue
 = 
EHOSTUNREACH
;

95 #ifde‡
EIDRM


96 
	gEIDRMVÆue
 = 
EIDRM
;

99 #ifde‡
EILSEQ


100 
	gEILSEQVÆue
 = 
EILSEQ
;

103 #ifde‡
EINPROGRESS


104 
	gEINPROGRESSVÆue
 = 
EINPROGRESS
;

107 #ifde‡
EINTR


108 
	gEINTRVÆue
 = 
EINTR
;

111 #ifde‡
EINVAL


112 
	gEINVALVÆue
 = 
EINVAL
;

115 #ifde‡
EIO


116 
	gEIOVÆue
 = 
EIO
;

119 #ifde‡
EISCONN


120 
	gEISCONNVÆue
 = 
EISCONN
;

123 #ifde‡
EISDIR


124 
	gEISDIRVÆue
 = 
EISDIR
;

127 #ifde‡
ELOOP


128 
	gELOOPVÆue
 = 
ELOOP
;

131 #ifde‡
EMFILE


132 
	gEMFILEVÆue
 = 
EMFILE
;

135 #ifde‡
EMLINK


136 
	gEMLINKVÆue
 = 
EMLINK
;

139 #ifde‡
EMSGSIZE


140 
	gEMSGSIZEVÆue
 = 
EMSGSIZE
;

143 #ifde‡
EMULTIHOP


144 
	gEMULTIHOPVÆue
 = 
EMULTIHOP
;

147 #ifde‡
ENAMETOOLONG


148 
	gENAMETOOLONGVÆue
 = 
ENAMETOOLONG
;

151 #ifde‡
ENETDOWN


152 
	gENETDOWNVÆue
 = 
ENETDOWN
;

155 #ifde‡
ENETRESET


156 
	gENETRESETVÆue
 = 
ENETRESET
;

159 #ifde‡
ENETUNREACH


160 
	gENETUNREACHVÆue
 = 
ENETUNREACH
;

163 #ifde‡
ENFILE


164 
	gENFILEVÆue
 = 
ENFILE
;

167 #ifde‡
ENOBUFS


168 
	gENOBUFSVÆue
 = 
ENOBUFS
;

171 #ifde‡
ENODATA


172 
	gENODATAVÆue
 = 
ENODATA
;

175 #ifde‡
ENODEV


176 
	gENODEVVÆue
 = 
ENODEV
;

179 #ifde‡
ENOENT


180 
	gENOENTVÆue
 = 
ENOENT
;

183 #ifde‡
ENOEXEC


184 
	gENOEXECVÆue
 = 
ENOEXEC
;

187 #ifde‡
ENOLCK


188 
	gENOLCKVÆue
 = 
ENOLCK
;

191 #ifde‡
ENOLINK


192 
	gENOLINKVÆue
 = 
ENOLINK
;

195 #ifde‡
ENOMEM


196 
	gENOMEMVÆue
 = 
ENOMEM
;

199 #ifde‡
ENOMSG


200 
	gENOMSGVÆue
 = 
ENOMSG
;

203 #ifde‡
ENOPROTOOPT


204 
	gENOPROTOOPTVÆue
 = 
ENOPROTOOPT
;

207 #ifde‡
ENOSPC


208 
	gENOSPCVÆue
 = 
ENOSPC
;

211 #ifde‡
ENOSR


212 
	gENOSRVÆue
 = 
ENOSR
;

215 #ifde‡
ENOSTR


216 
	gENOSTRVÆue
 = 
ENOSTR
;

219 #ifde‡
ENOSYS


220 
	gENOSYSVÆue
 = 
ENOSYS
;

223 #ifde‡
ENOTCONN


224 
	gENOTCONNVÆue
 = 
ENOTCONN
;

227 #ifde‡
ENOTDIR


228 
	gENOTDIRVÆue
 = 
ENOTDIR
;

231 #ifde‡
ENOTEMPTY


232 
	gENOTEMPTYVÆue
 = 
ENOTEMPTY
;

235 #ifde‡
ENOTRECOVERABLE


236 
	gENOTRECOVERABLEVÆue
 = 
ENOTRECOVERABLE
;

239 #ifde‡
ENOTSOCK


240 
	gENOTSOCKVÆue
 = 
ENOTSOCK
;

243 #ifde‡
ENOTSUP


244 
	gENOTSUPVÆue
 = 
ENOTSUP
;

247 #ifde‡
ENOTTY


248 
	gENOTTYVÆue
 = 
ENOTTY
;

251 #ifde‡
ENXIO


252 
	gENXIOVÆue
 = 
ENXIO
;

255 #ifde‡
EOPNOTSUPP


256 
	gEOPNOTSUPPVÆue
 = 
EOPNOTSUPP
;

259 #ifde‡
EOVERFLOW


260 
	gEOVERFLOWVÆue
 = 
EOVERFLOW
;

263 #ifde‡
EOWNERDEAD


264 
	gEOWNERDEADVÆue
 = 
EOWNERDEAD
;

267 #ifde‡
EPERM


268 
	gEPERMVÆue
 = 
EPERM
;

271 #ifde‡
EPIPE


272 
	gEPIPEVÆue
 = 
EPIPE
;

275 #ifde‡
EPROTO


276 
	gEPROTOVÆue
 = 
EPROTO
;

279 #ifde‡
EPROTONOSUPPORT


280 
	gEPROTONOSUPPORTVÆue
 = 
EPROTONOSUPPORT
;

283 #ifde‡
EPROTOTYPE


284 
	gEPROTOTYPEVÆue
 = 
EPROTOTYPE
;

287 #ifde‡
ERANGE


288 
	gERANGEVÆue
 = 
ERANGE
;

291 #ifde‡
EROFS


292 
	gEROFSVÆue
 = 
EROFS
;

295 #ifde‡
ESPIPE


296 
	gESPIPEVÆue
 = 
ESPIPE
;

299 #ifde‡
ESRCH


300 
	gESRCHVÆue
 = 
ESRCH
;

303 #ifde‡
ESTALE


304 
	gESTALEVÆue
 = 
ESTALE
;

307 #ifde‡
ETIME


308 
	gETIMEVÆue
 = 
ETIME
;

311 #ifde‡
ETIMEDOUT


312 
	gETIMEDOUTVÆue
 = 
ETIMEDOUT
;

315 #ifde‡
ETXTBSY


316 
	gETXTBSYVÆue
 = 
ETXTBSY
;

319 #ifde‡
EWOULDBLOCK


320 
	gEWOULDBLOCKVÆue
 = 
EWOULDBLOCK
;

323 #ifde‡
EXDEV


324 
	gEXDEVVÆue
 = 
EXDEV
;

329 
	$StdEºnoSëupFunc
()

332 #ifde‡
EACCES


333 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EACCES", &
I¡Ty≥
, (
AnyVÆue
 *)&
EACCESVÆue
, 
FALSE
);

336 #ifde‡
EADDRINUSE


337 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EADDRINUSE", &
I¡Ty≥
, (
AnyVÆue
 *)&
EADDRINUSEVÆue
, 
FALSE
);

340 #ifde‡
EADDRNOTAVAIL


341 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EADDRNOTAVAIL", &
I¡Ty≥
, (
AnyVÆue
 *)&
EADDRNOTAVAILVÆue
, 
FALSE
);

344 #ifde‡
EAFNOSUPPORT


345 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EAFNOSUPPORT", &
I¡Ty≥
, (
AnyVÆue
 *)&
EAFNOSUPPORTVÆue
, 
FALSE
);

348 #ifde‡
EAGAIN


349 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EAGAIN", &
I¡Ty≥
, (
AnyVÆue
 *)&
EAGAINVÆue
, 
FALSE
);

352 #ifde‡
EALREADY


353 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EALREADY", &
I¡Ty≥
, (
AnyVÆue
 *)&
EALREADYVÆue
, 
FALSE
);

356 #ifde‡
EBADF


357 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EBADF", &
I¡Ty≥
, (
AnyVÆue
 *)&
EBADFVÆue
, 
FALSE
);

360 #ifde‡
EBADMSG


361 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EBADMSG", &
I¡Ty≥
, (
AnyVÆue
 *)&
EBADMSGVÆue
, 
FALSE
);

364 #ifde‡
EBUSY


365 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EBUSY", &
I¡Ty≥
, (
AnyVÆue
 *)&
EBUSYVÆue
, 
FALSE
);

368 #ifde‡
ECANCELED


369 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ECANCELED", &
I¡Ty≥
, (
AnyVÆue
 *)&
ECANCELEDVÆue
, 
FALSE
);

372 #ifde‡
ECHILD


373 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ECHILD", &
I¡Ty≥
, (
AnyVÆue
 *)&
ECHILDVÆue
, 
FALSE
);

376 #ifde‡
ECONNABORTED


377 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ECONNABORTED", &
I¡Ty≥
, (
AnyVÆue
 *)&
ECONNABORTEDVÆue
, 
FALSE
);

380 #ifde‡
ECONNREFUSED


381 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ECONNREFUSED", &
I¡Ty≥
, (
AnyVÆue
 *)&
ECONNREFUSEDVÆue
, 
FALSE
);

384 #ifde‡
ECONNRESET


385 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ECONNRESET", &
I¡Ty≥
, (
AnyVÆue
 *)&
ECONNRESETVÆue
, 
FALSE
);

388 #ifde‡
EDEADLK


389 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EDEADLK", &
I¡Ty≥
, (
AnyVÆue
 *)&
EDEADLKVÆue
, 
FALSE
);

392 #ifde‡
EDESTADDRREQ


393 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EDESTADDRREQ", &
I¡Ty≥
, (
AnyVÆue
 *)&
EDESTADDRREQVÆue
, 
FALSE
);

396 #ifde‡
EDOM


397 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EDOM", &
I¡Ty≥
, (
AnyVÆue
 *)&
EDOMVÆue
, 
FALSE
);

400 #ifde‡
EDQUOT


401 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EDQUOT", &
I¡Ty≥
, (
AnyVÆue
 *)&
EDQUOTVÆue
, 
FALSE
);

404 #ifde‡
EEXIST


405 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EEXIST", &
I¡Ty≥
, (
AnyVÆue
 *)&
EEXISTVÆue
, 
FALSE
);

408 #ifde‡
EFAULT


409 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EFAULT", &
I¡Ty≥
, (
AnyVÆue
 *)&
EFAULTVÆue
, 
FALSE
);

412 #ifde‡
EFBIG


413 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EFBIG", &
I¡Ty≥
, (
AnyVÆue
 *)&
EFBIGVÆue
, 
FALSE
);

416 #ifde‡
EHOSTUNREACH


417 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EHOSTUNREACH", &
I¡Ty≥
, (
AnyVÆue
 *)&
EHOSTUNREACHVÆue
, 
FALSE
);

420 #ifde‡
EIDRM


421 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EIDRM", &
I¡Ty≥
, (
AnyVÆue
 *)&
EIDRMVÆue
, 
FALSE
);

424 #ifde‡
EILSEQ


425 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EILSEQ", &
I¡Ty≥
, (
AnyVÆue
 *)&
EILSEQVÆue
, 
FALSE
);

428 #ifde‡
EINPROGRESS


429 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EINPROGRESS", &
I¡Ty≥
, (
AnyVÆue
 *)&
EINPROGRESSVÆue
, 
FALSE
);

432 #ifde‡
EINTR


433 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EINTR", &
I¡Ty≥
, (
AnyVÆue
 *)&
EINTRVÆue
, 
FALSE
);

436 #ifde‡
EINVAL


437 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EINVAL", &
I¡Ty≥
, (
AnyVÆue
 *)&
EINVALVÆue
, 
FALSE
);

440 #ifde‡
EIO


441 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EIO", &
I¡Ty≥
, (
AnyVÆue
 *)&
EIOVÆue
, 
FALSE
);

444 #ifde‡
EISCONN


445 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EISCONN", &
I¡Ty≥
, (
AnyVÆue
 *)&
EISCONNVÆue
, 
FALSE
);

448 #ifde‡
EISDIR


449 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EISDIR", &
I¡Ty≥
, (
AnyVÆue
 *)&
EISDIRVÆue
, 
FALSE
);

452 #ifde‡
ELOOP


453 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ELOOP", &
I¡Ty≥
, (
AnyVÆue
 *)&
ELOOPVÆue
, 
FALSE
);

456 #ifde‡
EMFILE


457 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EMFILE", &
I¡Ty≥
, (
AnyVÆue
 *)&
EMFILEVÆue
, 
FALSE
);

460 #ifde‡
EMLINK


461 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EMLINK", &
I¡Ty≥
, (
AnyVÆue
 *)&
EMLINKVÆue
, 
FALSE
);

464 #ifde‡
EMSGSIZE


465 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EMSGSIZE", &
I¡Ty≥
, (
AnyVÆue
 *)&
EMSGSIZEVÆue
, 
FALSE
);

468 #ifde‡
EMULTIHOP


469 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EMULTIHOP", &
I¡Ty≥
, (
AnyVÆue
 *)&
EMULTIHOPVÆue
, 
FALSE
);

472 #ifde‡
ENAMETOOLONG


473 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENAMETOOLONG", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENAMETOOLONGVÆue
, 
FALSE
);

476 #ifde‡
ENETDOWN


477 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENETDOWN", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENETDOWNVÆue
, 
FALSE
);

480 #ifde‡
ENETRESET


481 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENETRESET", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENETRESETVÆue
, 
FALSE
);

484 #ifde‡
ENETUNREACH


485 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENETUNREACH", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENETUNREACHVÆue
, 
FALSE
);

488 #ifde‡
ENFILE


489 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENFILE", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENFILEVÆue
, 
FALSE
);

492 #ifde‡
ENOBUFS


493 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOBUFS", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOBUFSVÆue
, 
FALSE
);

496 #ifde‡
ENODATA


497 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENODATA", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENODATAVÆue
, 
FALSE
);

500 #ifde‡
ENODEV


501 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENODEV", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENODEVVÆue
, 
FALSE
);

504 #ifde‡
ENOENT


505 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOENT", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOENTVÆue
, 
FALSE
);

508 #ifde‡
ENOEXEC


509 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOEXEC", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOEXECVÆue
, 
FALSE
);

512 #ifde‡
ENOLCK


513 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOLCK", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOLCKVÆue
, 
FALSE
);

516 #ifde‡
ENOLINK


517 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOLINK", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOLINKVÆue
, 
FALSE
);

520 #ifde‡
ENOMEM


521 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOMEM", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOMEMVÆue
, 
FALSE
);

524 #ifde‡
ENOMSG


525 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOMSG", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOMSGVÆue
, 
FALSE
);

528 #ifde‡
ENOPROTOOPT


529 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOPROTOOPT", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOPROTOOPTVÆue
, 
FALSE
);

532 #ifde‡
ENOSPC


533 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOSPC", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOSPCVÆue
, 
FALSE
);

536 #ifde‡
ENOSR


537 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOSR", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOSRVÆue
, 
FALSE
);

540 #ifde‡
ENOSTR


541 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOSTR", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOSTRVÆue
, 
FALSE
);

544 #ifde‡
ENOSYS


545 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOSYS", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOSYSVÆue
, 
FALSE
);

548 #ifde‡
ENOTCONN


549 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOTCONN", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOTCONNVÆue
, 
FALSE
);

552 #ifde‡
ENOTDIR


553 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOTDIR", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOTDIRVÆue
, 
FALSE
);

556 #ifde‡
ENOTEMPTY


557 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOTEMPTY", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOTEMPTYVÆue
, 
FALSE
);

560 #ifde‡
ENOTRECOVERABLE


561 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOTRECOVERABLE", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOTRECOVERABLEVÆue
, 
FALSE
);

564 #ifde‡
ENOTSOCK


565 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOTSOCK", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOTSOCKVÆue
, 
FALSE
);

568 #ifde‡
ENOTSUP


569 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOTSUP", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOTSUPVÆue
, 
FALSE
);

572 #ifde‡
ENOTTY


573 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENOTTY", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENOTTYVÆue
, 
FALSE
);

576 #ifde‡
ENXIO


577 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ENXIO", &
I¡Ty≥
, (
AnyVÆue
 *)&
ENXIOVÆue
, 
FALSE
);

580 #ifde‡
EOPNOTSUPP


581 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EOPNOTSUPP", &
I¡Ty≥
, (
AnyVÆue
 *)&
EOPNOTSUPPVÆue
, 
FALSE
);

584 #ifde‡
EOVERFLOW


585 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EOVERFLOW", &
I¡Ty≥
, (
AnyVÆue
 *)&
EOVERFLOWVÆue
, 
FALSE
);

588 #ifde‡
EOWNERDEAD


589 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EOWNERDEAD", &
I¡Ty≥
, (
AnyVÆue
 *)&
EOWNERDEADVÆue
, 
FALSE
);

592 #ifde‡
EPERM


593 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EPERM", &
I¡Ty≥
, (
AnyVÆue
 *)&
EPERMVÆue
, 
FALSE
);

596 #ifde‡
EPIPE


597 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EPIPE", &
I¡Ty≥
, (
AnyVÆue
 *)&
EPIPEVÆue
, 
FALSE
);

600 #ifde‡
EPROTO


601 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EPROTO", &
I¡Ty≥
, (
AnyVÆue
 *)&
EPROTOVÆue
, 
FALSE
);

604 #ifde‡
EPROTONOSUPPORT


605 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EPROTONOSUPPORT", &
I¡Ty≥
, (
AnyVÆue
 *)&
EPROTONOSUPPORTVÆue
, 
FALSE
);

608 #ifde‡
EPROTOTYPE


609 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EPROTOTYPE", &
I¡Ty≥
, (
AnyVÆue
 *)&
EPROTOTYPEVÆue
, 
FALSE
);

612 #ifde‡
ERANGE


613 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ERANGE", &
I¡Ty≥
, (
AnyVÆue
 *)&
ERANGEVÆue
, 
FALSE
);

616 #ifde‡
EROFS


617 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EROFS", &
I¡Ty≥
, (
AnyVÆue
 *)&
EROFSVÆue
, 
FALSE
);

620 #ifde‡
ESPIPE


621 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ESPIPE", &
I¡Ty≥
, (
AnyVÆue
 *)&
ESPIPEVÆue
, 
FALSE
);

624 #ifde‡
ESRCH


625 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ESRCH", &
I¡Ty≥
, (
AnyVÆue
 *)&
ESRCHVÆue
, 
FALSE
);

628 #ifde‡
ESTALE


629 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ESTALE", &
I¡Ty≥
, (
AnyVÆue
 *)&
ESTALEVÆue
, 
FALSE
);

632 #ifde‡
ETIME


633 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ETIME", &
I¡Ty≥
, (
AnyVÆue
 *)&
ETIMEVÆue
, 
FALSE
);

636 #ifde‡
ETIMEDOUT


637 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ETIMEDOUT", &
I¡Ty≥
, (
AnyVÆue
 *)&
ETIMEDOUTVÆue
, 
FALSE
);

640 #ifde‡
ETXTBSY


641 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "ETXTBSY", &
I¡Ty≥
, (
AnyVÆue
 *)&
ETXTBSYVÆue
, 
FALSE
);

644 #ifde‡
EWOULDBLOCK


645 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EWOULDBLOCK", &
I¡Ty≥
, (
AnyVÆue
 *)&
EWOULDBLOCKVÆue
, 
FALSE
);

648 #ifde‡
EXDEV


649 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EXDEV", &
I¡Ty≥
, (
AnyVÆue
 *)&
EXDEVVÆue
, 
FALSE
);

652 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "î∫o", &
I¡Ty≥
, (
AnyVÆue
 *)&
î∫o
, 
TRUE
);

653 
	}
}

	@math.c

2 
	~"../öãΩªãr.h
"

4 #i‚de‡
BUILTIN_MINI_STDLIB


5 #i‚de‡
NO_FP


7 
	gM_EVÆue
 = 2.7182818284590452354;

8 
	gM_LOG2EVÆue
 = 1.4426950408889634074;

9 
	gM_LOG10EVÆue
 = 0.43429448190325182765;

10 
	gM_LN2VÆue
 = 0.69314718055994530942;

11 
	gM_LN10VÆue
 = 2.30258509299404568402;

12 
	gM_PIVÆue
 = 3.14159265358979323846;

13 
	gM_PI_2VÆue
 = 1.57079632679489661923;

14 
	gM_PI_4VÆue
 = 0.78539816339744830962;

15 
	gM_1_PIVÆue
 = 0.31830988618379067154;

16 
	gM_2_PIVÆue
 = 0.63661977236758134308;

17 
	gM_2_SQRTPIVÆue
 = 1.12837916709551257390;

18 
	gM_SQRT2VÆue
 = 1.41421356237309504880;

19 
	gM_SQRT1_2VÆue
 = 0.70710678118654752440;

22 
	$M©hSö
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

24 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`sö
(
P¨am
[0]->Val->FP);

25 
	}
}

27 
	$M©hCos
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

29 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`cos
(
P¨am
[0]->Val->FP);

30 
	}
}

32 
	$M©hT™
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

34 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`èn
(
P¨am
[0]->Val->FP);

35 
	}
}

37 
	$M©hAsö
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

39 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`asö
(
P¨am
[0]->Val->FP);

40 
	}
}

42 
	$M©hAcos
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

44 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`acos
(
P¨am
[0]->Val->FP);

45 
	}
}

47 
	$M©hAèn
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

49 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`©™
(
P¨am
[0]->Val->FP);

50 
	}
}

52 
	$M©hAèn2
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

54 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`©™2
(
P¨am
[0]->Val->FP, Param[1]->Val->FP);

55 
	}
}

57 
	$M©hSöh
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

59 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`söh
(
P¨am
[0]->Val->FP);

60 
	}
}

62 
	$M©hCosh
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

64 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`cosh
(
P¨am
[0]->Val->FP);

65 
	}
}

67 
	$M©hT™h
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

69 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`ènh
(
P¨am
[0]->Val->FP);

70 
	}
}

72 
	$M©hExp
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

74 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`exp
(
P¨am
[0]->Val->FP);

75 
	}
}

77 
	$M©hFabs
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

79 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`Ábs
(
P¨am
[0]->Val->FP);

80 
	}
}

82 
	$M©hFmod
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

84 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`fmod
(
P¨am
[0]->Val->FP, Param[1]->Val->FP);

85 
	}
}

87 
	$M©hFªxp
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

89 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`‰exp
(
P¨am
[0]->VÆ->FP, P¨am[1]->VÆ->
Poöãr
);

90 
	}
}

92 
	$M©hLdexp
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

94 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`ldexp
(
P¨am
[0]->VÆ->FP, P¨am[1]->VÆ->
I¡egî
);

95 
	}
}

97 
	$M©hLog
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

99 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`log
(
P¨am
[0]->Val->FP);

100 
	}
}

102 
	$M©hLog10
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

104 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`log10
(
P¨am
[0]->Val->FP);

105 
	}
}

107 
	$M©hModf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

109 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`modf
(
P¨am
[0]->VÆ->FP, P¨am[0]->VÆ->
Poöãr
);

110 
	}
}

112 
	$M©hPow
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

114 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`pow
(
P¨am
[0]->Val->FP, Param[1]->Val->FP);

115 
	}
}

117 
	$M©hSqπ
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

119 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`sqπ
(
P¨am
[0]->Val->FP);

120 
	}
}

122 
	$M©hRound
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

126 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`˚û
(
P¨am
[0]->Val->FP - 0.5);

127 
	}
}

129 
	$M©hCeû
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

131 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`˚û
(
P¨am
[0]->Val->FP);

132 
	}
}

134 
	$M©hFlo‹
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

136 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`Êo‹
(
P¨am
[0]->Val->FP);

137 
	}
}

140 
LibøryFun˘i⁄
 
	gM©hFun˘i⁄s
[] =

142 { 
M©hAcos
, "floatácos(float);" },

143 { 
M©hAsö
, "floatásin(float);" },

144 { 
M©hAèn
, "floatátan(float);" },

145 { 
M©hAèn2
, "floatátan2(float, float);" },

146 { 
M©hCeû
, "float ceil(float);" },

147 { 
M©hCos
, "float cos(float);" },

148 { 
M©hCosh
, "float cosh(float);" },

149 { 
M©hExp
, "floatÉxp(float);" },

150 { 
M©hFabs
, "float fabs(float);" },

151 { 
M©hFlo‹
, "float floor(float);" },

152 { 
M©hFmod
, "float fmod(float, float);" },

153 { 
M©hFªxp
, "float frexp(float, int *);" },

154 { 
M©hLdexp
, "floatÜdexp(float, int);" },

155 { 
M©hLog
, "floatÜog(float);" },

156 { 
M©hLog10
, "floatÜog10(float);" },

157 { 
M©hModf
, "float modf(float, float *);" },

158 { 
M©hPow
, "floatÖow(float,float);" },

159 { 
M©hRound
, "floatÑound(float);" },

160 { 
M©hSö
, "float sin(float);" },

161 { 
M©hSöh
, "float sinh(float);" },

162 { 
M©hSqπ
, "float sqrt(float);" },

163 { 
M©hT™
, "floatÅan(float);" },

164 { 
M©hT™h
, "floatÅanh(float);" },

165 { 
NULL
, NULL }

169 
	$M©hSëupFunc
()

171 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "M_E", &
FPTy≥
, (
AnyVÆue
 *)&
M_EVÆue
, 
FALSE
);

172 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "M_LOG2E", &
FPTy≥
, (
AnyVÆue
 *)&
M_LOG2EVÆue
, 
FALSE
);

173 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "M_LOG10E", &
FPTy≥
, (
AnyVÆue
 *)&
M_LOG10EVÆue
, 
FALSE
);

174 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "M_LN2", &
FPTy≥
, (
AnyVÆue
 *)&
M_LN2VÆue
, 
FALSE
);

175 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "M_LN10", &
FPTy≥
, (
AnyVÆue
 *)&
M_LN10VÆue
, 
FALSE
);

176 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "M_PI", &
FPTy≥
, (
AnyVÆue
 *)&
M_PIVÆue
, 
FALSE
);

177 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "M_PI_2", &
FPTy≥
, (
AnyVÆue
 *)&
M_PI_2VÆue
, 
FALSE
);

178 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "M_PI_4", &
FPTy≥
, (
AnyVÆue
 *)&
M_PI_4VÆue
, 
FALSE
);

179 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "M_1_PI", &
FPTy≥
, (
AnyVÆue
 *)&
M_1_PIVÆue
, 
FALSE
);

180 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "M_2_PI", &
FPTy≥
, (
AnyVÆue
 *)&
M_2_PIVÆue
, 
FALSE
);

181 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "M_2_SQRTPI", &
FPTy≥
, (
AnyVÆue
 *)&
M_2_SQRTPIVÆue
, 
FALSE
);

182 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "M_SQRT2", &
FPTy≥
, (
AnyVÆue
 *)&
M_SQRT2VÆue
, 
FALSE
);

183 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "M_SQRT1_2", &
FPTy≥
, (
AnyVÆue
 *)&
M_SQRT1_2VÆue
, 
FALSE
);

184 
	}
}

	@stdbool.c

2 
	~"../öãΩªãr.h
"

4 #i‚de‡
BUILTIN_MINI_STDLIB


6 
	gåueVÆue
 = 1;

7 
	gÁl£VÆue
 = 0;

11 c⁄° 
	gStdboﬁDefs
[] = "typedef int bool;";

14 
	$StdboﬁSëupFunc
()

17 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "åue", &
I¡Ty≥
, (
AnyVÆue
 *)&
åueVÆue
, 
FALSE
);

18 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "Ál£", &
I¡Ty≥
, (
AnyVÆue
 *)&
Ál£VÆue
, 
FALSE
);

19 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "__boﬁ_åue_Ál£_¨e_deföed", &
I¡Ty≥
, (
AnyVÆue
 *)&
åueVÆue
, 
FALSE
);

20 
	}
}

	@stdio.c

2 
	~<î∫o.h
>

3 
	~"../öãΩªãr.h
"

5 #i‚de‡
BUILTIN_MINI_STDLIB


7 
	#MAX_FORMAT
 80

	)

8 
	#MAX_SCANF_ARGS
 10

	)

10 
FILE
 *
	gCStdOut
;

12 
	gZîoVÆue
 = 0;

13 
	gEOFVÆue
 = 
EOF
;

14 
	gSEEK_SETVÆue
 = 
SEEK_SET
;

15 
	gSEEK_CURVÆue
 = 
SEEK_CUR
;

16 
	gSEEK_ENDVÆue
 = 
SEEK_END
;

17 
	gBUFSIZVÆue
 = 
BUFSIZ
;

18 
	gFILENAME_MAXVÆue
 = 
FILENAME_MAX
;

19 
	g_IOFBFVÆue
 = 
_IOFBF
;

20 
	g_IOLBFVÆue
 = 
_IOLBF
;

21 
	g_IONBFVÆue
 = 
_IONBF
;

22 
	gL_tm≤amVÆue
 = 
L_tm≤am
;

23 
	gGETS_MAXVÆue
 = 255;

25 
FILE
 *
	g°döVÆue
;

26 
FILE
 *
	g°doutVÆue
;

27 
FILE
 *
	g°dîrVÆue
;

29 
VÆueTy≥
 *
	gFûePåTy≥
 = 
NULL
;

33 
	sStdOutSåómSåu˘


35 
FILE
 *
	mFûePå
;

36 *
	mSåOutPå
;

37 
	mSåOutLí
;

38 
	mCh¨Cou¡
;

40 } 
	tStdOutSåóm
;

43 
	sStdV¨¨g


45 
VÆue
 **
	mP¨am
;

46 
	mNumArgs
;

50 
	$BasicIOInô
()

52 
CStdOut
 = 
°dout
;

53 
°döVÆue
 = 
°dö
;

54 
°doutVÆue
 = 
°dout
;

55 
°dîrVÆue
 = 
°dîr
;

56 
	}
}

59 
	$StdioOutPutc
(
OutCh
, 
StdOutSåóm
 *
Såóm
)

61 i‡(
Såóm
->
FûePå
 !
NULL
)

64 
	`putc
(
OutCh
, 
Såóm
->
FûePå
);

65 
Såóm
->
Ch¨Cou¡
++;

67 i‡(
Såóm
->
SåOutLí
 < 0 || Stream->StrOutLen > 1)

70 *
Såóm
->
SåOutPå
 = 
OutCh
;

71 
Såóm
->
SåOutPå
++;

73 i‡(
Såóm
->
SåOutLí
 > 1)

74 
Såóm
->
SåOutLí
--;

76 
Såóm
->
Ch¨Cou¡
++;

78 
	}
}

81 
	$StdioOutPuts
(c⁄° *
Så
, 
StdOutSåóm
 *
Såóm
)

83 i‡(
Såóm
->
FûePå
 !
NULL
)

86 
	`Âuts
(
Så
, 
Såóm
->
FûePå
);

91 *
Så
 != '\0')

93 i‡(
Såóm
->
SåOutLí
 < 0 || Stream->StrOutLen > 1)

96 *
Såóm
->
SåOutPå
 = *
Så
;

97 
Så
++;

98 
Såóm
->
SåOutPå
++;

100 i‡(
Såóm
->
SåOutLí
 > 1)

101 
Såóm
->
SåOutLí
--;

103 
Såóm
->
Ch¨Cou¡
++;

107 
	}
}

110 
	$StdioF¥ötfW‹d
(
StdOutSåóm
 *
Såóm
, c⁄° *
F‹m©
, 
VÆue
)

112 i‡(
Såóm
->
FûePå
 !
NULL
)

113 
Såóm
->
Ch¨Cou¡
 +
	`Ârötf
(Såóm->
FûePå
, 
F‹m©
, 
VÆue
);

115 i‡(
Såóm
->
SåOutLí
 >= 0)

117 
CCou¡
 = 
	`¢¥ötf
(
Såóm
->
SåOutPå
, Såóm->
SåOutLí
, 
F‹m©
, 
VÆue
);

118 
Såóm
->
SåOutPå
 +
CCou¡
;

119 
Såóm
->
SåOutLí
 -
CCou¡
;

120 
Såóm
->
Ch¨Cou¡
 +
CCou¡
;

124 
CCou¡
 = 
	`•rötf
(
Såóm
->
SåOutPå
, 
F‹m©
, 
VÆue
);

125 
Såóm
->
Ch¨Cou¡
 +
CCou¡
;

126 
Såóm
->
SåOutPå
 +
CCou¡
;

128 
	}
}

131 
	$StdioF¥ötfFP
(
StdOutSåóm
 *
Såóm
, c⁄° *
F‹m©
, 
VÆue
)

133 i‡(
Såóm
->
FûePå
 !
NULL
)

134 
Såóm
->
Ch¨Cou¡
 +
	`Ârötf
(Såóm->
FûePå
, 
F‹m©
, 
VÆue
);

136 i‡(
Såóm
->
SåOutLí
 >= 0)

138 
CCou¡
 = 
	`¢¥ötf
(
Såóm
->
SåOutPå
, Såóm->
SåOutLí
, 
F‹m©
, 
VÆue
);

139 
Såóm
->
SåOutPå
 +
CCou¡
;

140 
Såóm
->
SåOutLí
 -
CCou¡
;

141 
Såóm
->
Ch¨Cou¡
 +
CCou¡
;

145 
CCou¡
 = 
	`•rötf
(
Såóm
->
SåOutPå
, 
F‹m©
, 
VÆue
);

146 
Såóm
->
Ch¨Cou¡
 +
CCou¡
;

147 
Såóm
->
SåOutPå
 +
CCou¡
;

149 
	}
}

152 
	$StdioF¥ötfPoöãr
(
StdOutSåóm
 *
Såóm
, c⁄° *
F‹m©
, *
VÆue
)

154 i‡(
Såóm
->
FûePå
 !
NULL
)

155 
Såóm
->
Ch¨Cou¡
 +
	`Ârötf
(Såóm->
FûePå
, 
F‹m©
, 
VÆue
);

157 i‡(
Såóm
->
SåOutLí
 >= 0)

159 
CCou¡
 = 
	`¢¥ötf
(
Såóm
->
SåOutPå
, Såóm->
SåOutLí
, 
F‹m©
, 
VÆue
);

160 
Såóm
->
SåOutPå
 +
CCou¡
;

161 
Såóm
->
SåOutLí
 -
CCou¡
;

162 
Såóm
->
Ch¨Cou¡
 +
CCou¡
;

166 
CCou¡
 = 
	`•rötf
(
Såóm
->
SåOutPå
, 
F‹m©
, 
VÆue
);

167 
Såóm
->
Ch¨Cou¡
 +
CCou¡
;

168 
Såóm
->
SåOutPå
 +
CCou¡
;

170 
	}
}

173 
	$StdioBa£Prötf
(
P¨£Sèã
 *
P¨£r
, 
FILE
 *
Såóm
, *
SåOut
, 
SåOutLí
, *
F‹m©
, 
StdV¨¨g
 *
Args
)

175 
VÆue
 *
ThisArg
 = 
Args
->
P¨am
[0];

176 
ArgCou¡
 = 0;

177 *
FPos
 = 
F‹m©
;

178 
O√F‹m©Buf
[
MAX_FORMAT
+1];

179 
O√F‹m©Cou¡
;

180 
VÆueTy≥
 *
ShowTy≥
;

181 
StdOutSåóm
 
SOSåóm
;

183 
SOSåóm
.
FûePå
 = 
Såóm
;

184 
SOSåóm
.
SåOutPå
 = 
SåOut
;

185 
SOSåóm
.
SåOutLí
 = StrOutLen;

186 
SOSåóm
.
Ch¨Cou¡
 = 0;

188 *
FPos
 != '\0')

190 i‡(*
FPos
 == '%')

193 
FPos
++;

194 
ShowTy≥
 = 
NULL
;

195 
O√F‹m©Buf
[0] = '%';

196 
O√F‹m©Cou¡
 = 1;

200 *
FPos
)

202 'd': 'i': 
ShowTy≥
 = &
I¡Ty≥
; ;

203 'o': 'u': 'x': 'X': 
ShowTy≥
 = &
I¡Ty≥
; ;

204 #i‚de‡
NO_FP


205 'e': 'E': 
ShowTy≥
 = &
FPTy≥
; ;

206 'f': 'F': 
ShowTy≥
 = &
FPTy≥
; ;

207 'g': 'G': 
ShowTy≥
 = &
FPTy≥
; ;

209 'a': 'A': 
ShowTy≥
 = &
I¡Ty≥
; ;

210 'c': 
ShowTy≥
 = &
I¡Ty≥
; ;

211 's': 
ShowTy≥
 = 
Ch¨PåTy≥
; ;

212 'p': 
ShowTy≥
 = 
VoidPåTy≥
; ;

213 'n': 
ShowTy≥
 = &
VoidTy≥
; ;

214 'm': 
ShowTy≥
 = &
VoidTy≥
; ;

215 '%': 
ShowTy≥
 = &
VoidTy≥
; ;

216 '\0': 
ShowTy≥
 = &
VoidTy≥
; ;

220 
O√F‹m©Buf
[
O√F‹m©Cou¡
] = *
FPos
;

221 
O√F‹m©Cou¡
++;

224 i‡(
ShowTy≥
 =&
VoidTy≥
)

226 *
FPos
)

228 'm': 
	`StdioOutPuts
(
	`°ªº‹
(
î∫o
), &
SOSåóm
); ;

229 '%': 
	`StdioOutPutc
(*
FPos
, &
SOSåóm
); ;

230 '\0': 
O√F‹m©Buf
[
O√F‹m©Cou¡
] = '\0'; 
	`StdioOutPutc
(*
FPos
, &
SOSåóm
); ;

232 
ThisArg
 = (
VÆue
 *)((*)ThisArg + 
	`MEM_ALIGN
((VÆueË+ 
	`Ty≥SèckSizeVÆue
(ThisArg)));

233 i‡(
ThisArg
->
Typ
->
Ba£
 =
Ty≥Aºay
 && ThisArg->Typ->
FromTy≥
->Ba£ =
Ty≥I¡
)

234 *(*)
ThisArg
->
VÆ
->
Poöãr
 = 
SOSåóm
.
Ch¨Cou¡
;

239 
FPos
++;

241 } 
ShowTy≥
 =
NULL
 && 
O√F‹m©Cou¡
 < 
MAX_FORMAT
);

243 i‡(
ShowTy≥
 !&
VoidTy≥
)

245 i‡(
ArgCou¡
 >
Args
->
NumArgs
)

246 
	`StdioOutPuts
("XXX", &
SOSåóm
);

250 
O√F‹m©Buf
[
O√F‹m©Cou¡
] = '\0';

253 
ThisArg
 = (
VÆue
 *)((*)ThisArg + 
	`MEM_ALIGN
((VÆueË+ 
	`Ty≥SèckSizeVÆue
(ThisArg)));

254 i‡(
ShowTy≥
 =&
I¡Ty≥
)

257 i‡(
	`IS_NUMERIC_COERCIBLE
(
ThisArg
))

258 
	`StdioF¥ötfW‹d
(&
SOSåóm
, 
O√F‹m©Buf
, 
	`Ex¥essi⁄C€r˚Unsig√dI¡egî
(
ThisArg
));

260 
	`StdioOutPuts
("XXX", &
SOSåóm
);

262 #i‚de‡
NO_FP


263 i‡(
ShowTy≥
 =&
FPTy≥
)

266 i‡(
	`IS_NUMERIC_COERCIBLE
(
ThisArg
))

267 
	`StdioF¥ötfFP
(&
SOSåóm
, 
O√F‹m©Buf
, 
	`Ex¥essi⁄C€r˚FP
(
ThisArg
));

269 
	`StdioOutPuts
("XXX", &
SOSåóm
);

272 i‡(
ShowTy≥
 =
Ch¨PåTy≥
)

274 i‡(
ThisArg
->
Typ
->
Ba£
 =
Ty≥Poöãr
)

275 
	`StdioF¥ötfPoöãr
(&
SOSåóm
, 
O√F‹m©Buf
, 
ThisArg
->
VÆ
->
Poöãr
);

277 i‡(
ThisArg
->
Typ
->
Ba£
 =
Ty≥Aºay
 && ThisArg->Typ->
FromTy≥
->Ba£ =
Ty≥Ch¨
)

278 
	`StdioF¥ötfPoöãr
(&
SOSåóm
, 
O√F‹m©Buf
, &
ThisArg
->
VÆ
->
AºayMem
[0]);

281 
	`StdioOutPuts
("XXX", &
SOSåóm
);

283 i‡(
ShowTy≥
 =
VoidPåTy≥
)

285 i‡(
ThisArg
->
Typ
->
Ba£
 =
Ty≥Poöãr
)

286 
	`StdioF¥ötfPoöãr
(&
SOSåóm
, 
O√F‹m©Buf
, 
ThisArg
->
VÆ
->
Poöãr
);

288 i‡(
ThisArg
->
Typ
->
Ba£
 =
Ty≥Aºay
)

289 
	`StdioF¥ötfPoöãr
(&
SOSåóm
, 
O√F‹m©Buf
, &
ThisArg
->
VÆ
->
AºayMem
[0]);

292 
	`StdioOutPuts
("XXX", &
SOSåóm
);

295 
ArgCou¡
++;

302 
	`StdioOutPutc
(*
FPos
, &
SOSåóm
);

303 
FPos
++;

308 i‡(
SOSåóm
.
SåOutPå
 !
NULL
 && SOSåóm.
SåOutLí
 > 0)

309 *
SOSåóm
.
SåOutPå
 = '\0';

311  
SOSåóm
.
Ch¨Cou¡
;

312 
	}
}

315 
	$StdioBa£Sˇnf
(
P¨£Sèã
 *
P¨£r
, 
FILE
 *
Såóm
, *
SåIn
, *
F‹m©
, 
StdV¨¨g
 *
Args
)

317 
VÆue
 *
ThisArg
 = 
Args
->
P¨am
[0];

318 
ArgCou¡
 = 0;

319 *
SˇnfArg
[
MAX_SCANF_ARGS
];

321 i‡(
Args
->
NumArgs
 > 
MAX_SCANF_ARGS
)

322 
	`ProgømFaû
(
P¨£r
, "toÿm™yárgumít†tÿsˇnf(Ë- %d max", 
MAX_SCANF_ARGS
);

324 
ArgCou¡
 = 0; ArgCou¡ < 
Args
->
NumArgs
; ArgCount++)

326 
ThisArg
 = (
VÆue
 *)((*)ThisArg + 
	`MEM_ALIGN
((VÆueË+ 
	`Ty≥SèckSizeVÆue
(ThisArg)));

328 i‡(
ThisArg
->
Typ
->
Ba£
 =
Ty≥Poöãr
)

329 
SˇnfArg
[
ArgCou¡
] = 
ThisArg
->
VÆ
->
Poöãr
;

331 i‡(
ThisArg
->
Typ
->
Ba£
 =
Ty≥Aºay
)

332 
SˇnfArg
[
ArgCou¡
] = &
ThisArg
->
VÆ
->
AºayMem
[0];

335 
	`ProgømFaû
(
P¨£r
, "n⁄-poöã∏¨gumíàtÿsˇnf(Ë-árgumíà%dá·î f‹m©", 
ArgCou¡
+1);

338 i‡(
Såóm
 !
NULL
)

339  
	`fsˇnf
(
Såóm
, 
F‹m©
, 
SˇnfArg
[0], ScanfArg[1], ScanfArg[2], ScanfArg[3], ScanfArg[4], ScanfArg[5], ScanfArg[6], ScanfArg[7], ScanfArg[8], ScanfArg[9]);

341  
	`ssˇnf
(
SåIn
, 
F‹m©
, 
SˇnfArg
[0], ScanfArg[1], ScanfArg[2], ScanfArg[3], ScanfArg[4], ScanfArg[5], ScanfArg[6], ScanfArg[7], ScanfArg[8], ScanfArg[9]);

342 
	}
}

345 
	$StdioF›í
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

347 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`f›í
(
P¨am
[0]->Val->Pointer, Param[1]->Val->Pointer);

348 
	}
}

350 
	$StdioFª›í
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

352 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`‰e›í
(
P¨am
[0]->Val->Pointer, Param[1]->Val->Pointer, Param[2]->Val->Pointer);

353 
	}
}

355 
	$StdioF˛o£
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

357 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`f˛o£
(
P¨am
[0]->VÆ->
Poöãr
);

358 
	}
}

360 
	$StdioFªad
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

362 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`‰ód
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Integer, Param[2]->Val->Integer, Param[3]->Val->Pointer);

363 
	}
}

365 
	$StdioFwrôe
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

367 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`fwrôe
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Integer, Param[2]->Val->Integer, Param[3]->Val->Pointer);

368 
	}
}

370 
	$StdioFgëc
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

372 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`fgëc
(
P¨am
[0]->VÆ->
Poöãr
);

373 
	}
}

375 
	$StdioFgës
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

377 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`fgës
(
P¨am
[0]->VÆ->Poöãr, P¨am[1]->VÆ->
I¡egî
, Param[2]->Val->Pointer);

378 
	}
}

380 
	$StdioRemove
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

382 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`ªmove
(
P¨am
[0]->VÆ->
Poöãr
);

383 
	}
}

385 
	$StdioRíame
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

387 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`ª«me
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer);

388 
	}
}

390 
	$StdioRewöd
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

392 
	`ªwöd
(
P¨am
[0]->
VÆ
->
Poöãr
);

393 
	}
}

395 
	$StdioTmpfûe
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

397 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`tmpfûe
();

398 
	}
}

400 
	$StdioCÀ¨îr
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

402 
	`˛óªº
((
FILE
 *)
P¨am
[0]->
VÆ
->
Poöãr
);

403 
	}
}

405 
	$StdioFeof
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

407 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`„of
((
FILE
 *)
P¨am
[0]->VÆ->
Poöãr
);

408 
	}
}

410 
	$StdioFîr‹
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

412 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`„º‹
((
FILE
 *)
P¨am
[0]->VÆ->
Poöãr
);

413 
	}
}

415 
	$StdioFûío
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

417 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`fûío
(
P¨am
[0]->VÆ->
Poöãr
);

418 
	}
}

420 
	$StdioFÊush
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

422 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`fÊush
(
P¨am
[0]->VÆ->
Poöãr
);

423 
	}
}

425 
	$StdioFgëpos
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

427 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`fgëpos
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer);

428 
	}
}

430 
	$StdioF£ços
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

432 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`f£ços
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer);

433 
	}
}

435 
	$StdioFputc
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

437 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`Âutc
(
P¨am
[0]->VÆ->I¡egî, P¨am[1]->VÆ->
Poöãr
);

438 
	}
}

440 
	$StdioFputs
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

442 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`Âuts
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer);

443 
	}
}

445 
	$StdioFãŒ
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

447 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`·ñl
(
P¨am
[0]->VÆ->
Poöãr
);

448 
	}
}

450 
	$StdioF£ek
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

452 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`f£ek
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Integer, Param[2]->Val->Integer);

453 
	}
}

455 
	$StdioPîr‹
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

457 
	`≥º‹
(
P¨am
[0]->
VÆ
->
Poöãr
);

458 
	}
}

460 
	$StdioPutc
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

462 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`putc
(
P¨am
[0]->VÆ->I¡egî, P¨am[1]->VÆ->
Poöãr
);

463 
	}
}

465 
	$StdioPutch¨
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

467 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`putch¨
(
P¨am
[0]->Val->Integer);

468 
	}
}

470 
	$StdioSëbuf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

472 
	`£tbuf
(
P¨am
[0]->
VÆ
->
Poöãr
, Param[1]->Val->Pointer);

473 
	}
}

475 
	$StdioSëvbuf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

477 
	`£tvbuf
(
P¨am
[0]->
VÆ
->
Poöãr
, P¨am[1]->VÆ->Poöãr, P¨am[2]->VÆ->
I¡egî
, Param[3]->Val->Integer);

478 
	}
}

480 
	$StdioUngëc
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

482 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`ungëc
(
P¨am
[0]->VÆ->I¡egî, P¨am[1]->VÆ->
Poöãr
);

483 
	}
}

485 
	$StdioPuts
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

487 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`puts
(
P¨am
[0]->VÆ->
Poöãr
);

488 
	}
}

490 
	$StdioGës
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

492 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`fgës
(
P¨am
[0]->VÆ->Poöãr, 
GETS_MAXVÆue
, 
°dö
);

493 i‡(
Rëu∫VÆue
->
VÆ
->
Poöãr
 !
NULL
)

495 *
EOLPos
 = 
	`°rchr
(
P¨am
[0]->
VÆ
->
Poöãr
, '\n');

496 i‡(
EOLPos
 !
NULL
)

497 *
EOLPos
 = '\0';

499 
	}
}

501 
	$StdioGëch¨
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

503 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`gëch¨
();

504 
	}
}

506 
	$StdioPrötf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

508 
StdV¨¨g
 
PrötfArgs
;

510 
PrötfArgs
.
P¨am
 = Param;

511 
PrötfArgs
.
NumArgs
 = NumArgs-1;

512 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`StdioBa£Prötf
(
P¨£r
, 
°dout
, 
NULL
, 0, 
P¨am
[0]->VÆ->
Poöãr
, &
PrötfArgs
);

513 
	}
}

515 
	$StdioV¥ötf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

517 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`StdioBa£Prötf
(
P¨£r
, 
°dout
, 
NULL
, 0, 
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer);

518 
	}
}

520 
	$StdioF¥ötf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

522 
StdV¨¨g
 
PrötfArgs
;

524 
PrötfArgs
.
P¨am
 = Param + 1;

525 
PrötfArgs
.
NumArgs
 = NumArgs-2;

526 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`StdioBa£Prötf
(
P¨£r
, 
P¨am
[0]->VÆ->
Poöãr
, 
NULL
, 0, P¨am[1]->VÆ->Poöãr, &
PrötfArgs
);

527 
	}
}

529 
	$StdioVÂrötf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

531 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`StdioBa£Prötf
(
P¨£r
, 
P¨am
[0]->VÆ->
Poöãr
, 
NULL
, 0, Param[1]->Val->Pointer, Param[2]->Val->Pointer);

532 
	}
}

534 
	$StdioS¥ötf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

536 
StdV¨¨g
 
PrötfArgs
;

538 
PrötfArgs
.
P¨am
 = Param + 1;

539 
PrötfArgs
.
NumArgs
 = NumArgs-2;

540 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`StdioBa£Prötf
(
P¨£r
, 
NULL
, 
P¨am
[0]->VÆ->
Poöãr
, -1, P¨am[1]->VÆ->Poöãr, &
PrötfArgs
);

541 
	}
}

543 
	$StdioS≈rötf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

545 
StdV¨¨g
 
PrötfArgs
;

547 
PrötfArgs
.
P¨am
 = Param+2;

548 
PrötfArgs
.
NumArgs
 = NumArgs-3;

549 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`StdioBa£Prötf
(
P¨£r
, 
NULL
, 
P¨am
[0]->VÆ->
Poöãr
, P¨am[1]->VÆ->I¡egî, P¨am[2]->VÆ->Poöãr, &
PrötfArgs
);

550 
	}
}

552 
	$StdioSˇnf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

554 
StdV¨¨g
 
SˇnfArgs
;

556 
SˇnfArgs
.
P¨am
 = Param;

557 
SˇnfArgs
.
NumArgs
 = NumArgs-1;

558 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`StdioBa£Sˇnf
(
P¨£r
, 
°dö
, 
NULL
, 
P¨am
[0]->VÆ->
Poöãr
, &
SˇnfArgs
);

559 
	}
}

561 
	$StdioFsˇnf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

563 
StdV¨¨g
 
SˇnfArgs
;

565 
SˇnfArgs
.
P¨am
 = Param+1;

566 
SˇnfArgs
.
NumArgs
 = NumArgs-2;

567 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`StdioBa£Sˇnf
(
P¨£r
, 
P¨am
[0]->VÆ->
Poöãr
, 
NULL
, P¨am[1]->VÆ->Poöãr, &
SˇnfArgs
);

568 
	}
}

570 
	$StdioSsˇnf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

572 
StdV¨¨g
 
SˇnfArgs
;

574 
SˇnfArgs
.
P¨am
 = Param+1;

575 
SˇnfArgs
.
NumArgs
 = NumArgs-2;

576 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`StdioBa£Sˇnf
(
P¨£r
, 
NULL
, 
P¨am
[0]->VÆ->
Poöãr
, P¨am[1]->VÆ->Poöãr, &
SˇnfArgs
);

577 
	}
}

579 
	$StdioV•rötf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

581 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`StdioBa£Prötf
(
P¨£r
, 
NULL
, 
P¨am
[0]->VÆ->
Poöãr
, -1, Param[1]->Val->Pointer, Param[2]->Val->Pointer);

582 
	}
}

584 
	$StdioV¢¥ötf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

586 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`StdioBa£Prötf
(
P¨£r
, 
NULL
, 
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Integer, Param[2]->Val->Pointer, Param[3]->Val->Pointer);

587 
	}
}

589 
	$StdioVsˇnf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

591 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`StdioBa£Sˇnf
(
P¨£r
, 
°dö
, 
NULL
, 
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer);

592 
	}
}

594 
	$StdioVfsˇnf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

596 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`StdioBa£Sˇnf
(
P¨£r
, 
P¨am
[0]->VÆ->
Poöãr
, 
NULL
, Param[1]->Val->Pointer, Param[2]->Val->Pointer);

597 
	}
}

599 
	$StdioVssˇnf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

601 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`StdioBa£Sˇnf
(
P¨£r
, 
NULL
, 
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer, Param[2]->Val->Pointer);

602 
	}
}

605 c⁄° 
	gStdioDefs
[] = "\
 struct __va_listStruct va_list; \
 struct __FILEStruct FILE;\
";

611 
LibøryFun˘i⁄
 
	gStdioFun˘i⁄s
[] =

613 { 
StdioF›í
, "FILE *fopen(char *, char *);" },

614 { 
StdioFª›í
, "FILE *freopen(char *, char *, FILE *);" },

615 { 
StdioF˛o£
, "int fclose(FILE *);" },

616 { 
StdioFªad
, "int fread(void *, int, int, FILE *);" },

617 { 
StdioFwrôe
, "int fwrite(void *, int, int, FILE *);" },

618 { 
StdioFgëc
, "int fgetc(FILE *);" },

619 { 
StdioFgëc
, "int getc(FILE *);" },

620 { 
StdioFgës
, "char *fgets(char *, int, FILE *);" },

621 { 
StdioFputc
, "int fputc(int, FILE *);" },

622 { 
StdioFputs
, "int fputs(char *, FILE *);" },

623 { 
StdioRemove
, "intÑemove(char *);" },

624 { 
StdioRíame
, "intÑename(char *, char *);" },

625 { 
StdioRewöd
, "voidÑewind(FILE *);" },

626 { 
StdioTmpfûe
, "FILE *tmpfile();" },

627 { 
StdioCÀ¨îr
,"void clearerr(FILE *);" },

628 { 
StdioFeof
, "int feof(FILE *);" },

629 { 
StdioFîr‹
, "int ferror(FILE *);" },

630 { 
StdioFûío
, "int fileno(FILE *);" },

631 { 
StdioFÊush
, "int fflush(FILE *);" },

632 { 
StdioFgëpos
, "int fgetpos(FILE *, int *);" },

633 { 
StdioF£ços
, "int fsetpos(FILE *, int *);" },

634 { 
StdioFãŒ
, "int ftell(FILE *);" },

635 { 
StdioF£ek
, "int fseek(FILE *, int, int);" },

636 { 
StdioPîr‹
, "voidÖerror(char *);" },

637 { 
StdioPutc
, "intÖutc(char *, FILE *);" },

638 { 
StdioPutch¨
, "intÖutchar(int);" },

639 { 
StdioPutch¨
, "int fputchar(int);" },

640 { 
StdioSëbuf
, "void setbuf(FILE *, char *);" },

641 { 
StdioSëvbuf
, "void setvbuf(FILE *, char *, int, int);" },

642 { 
StdioUngëc
, "int ungetc(int, FILE *);" },

643 { 
StdioPuts
, "intÖuts(char *);" },

644 { 
StdioGës
, "char *gets(char *);" },

645 { 
StdioGëch¨
, "int getchar();" },

646 { 
StdioPrötf
, "intÖrintf(char *, ...);" },

647 { 
StdioF¥ötf
, "int fprintf(FILE *, char *, ...);" },

648 { 
StdioS¥ötf
, "int sprintf(char *, char *, ...);" },

649 { 
StdioS≈rötf
,"int snprintf(char *, int, char *, ...);" },

650 { 
StdioSˇnf
, "int scanf(char *, ...);" },

651 { 
StdioFsˇnf
, "int fscanf(FILE *, char *, ...);" },

652 { 
StdioSsˇnf
, "int sscanf(char *, char *, ...);" },

653 { 
StdioV¥ötf
, "int vprintf(char *, va_list);" },

654 { 
StdioVÂrötf
,"int vfprintf(FILE *, char *, va_list);" },

655 { 
StdioV•rötf
,"int vsprintf(char *, char *, va_list);" },

656 { 
StdioV¢¥ötf
,"int vsnprintf(char *, int, char *, va_list);" },

657 { 
StdioVsˇnf
, "int vscanf(char *, va_list);" },

658 { 
StdioVfsˇnf
, "int vfscanf(FILE *, char *, va_list);" },

659 { 
StdioVssˇnf
, "int vsscanf(char *, char *, va_list);" },

660 { 
NULL
, NULL }

664 
	$StdioSëupFunc
()

666 
VÆueTy≥
 *
Såu˘FûeTy≥
;

667 
VÆueTy≥
 *
FûePåTy≥
;

670 
Såu˘FûeTy≥
 = 
	`Ty≥Cª©eO∑queSåu˘
(
NULL
, 
	`TabÀSåRegi°î
("__FILESåu˘"), (
FILE
));

673 
FûePåTy≥
 = 
	`Ty≥GëM©chög
(
NULL
, 
Såu˘FûeTy≥
, 
Ty≥Poöãr
, 0, 
SåEm±y
, 
TRUE
);

676 
	`Ty≥Cª©eO∑queSåu˘
(
NULL
, 
	`TabÀSåRegi°î
("__va_li°Såu˘"), (
FILE
));

679 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "EOF", &
I¡Ty≥
, (
AnyVÆue
 *)&
EOFVÆue
, 
FALSE
);

680 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "SEEK_SET", &
I¡Ty≥
, (
AnyVÆue
 *)&
SEEK_SETVÆue
, 
FALSE
);

681 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "SEEK_CUR", &
I¡Ty≥
, (
AnyVÆue
 *)&
SEEK_CURVÆue
, 
FALSE
);

682 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "SEEK_END", &
I¡Ty≥
, (
AnyVÆue
 *)&
SEEK_ENDVÆue
, 
FALSE
);

683 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "BUFSIZ", &
I¡Ty≥
, (
AnyVÆue
 *)&
BUFSIZVÆue
, 
FALSE
);

684 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "FILENAME_MAX", &
I¡Ty≥
, (
AnyVÆue
 *)&
FILENAME_MAXVÆue
, 
FALSE
);

685 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "_IOFBF", &
I¡Ty≥
, (
AnyVÆue
 *)&
_IOFBFVÆue
, 
FALSE
);

686 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "_IOLBF", &
I¡Ty≥
, (
AnyVÆue
 *)&
_IOLBFVÆue
, 
FALSE
);

687 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "_IONBF", &
I¡Ty≥
, (
AnyVÆue
 *)&
_IONBFVÆue
, 
FALSE
);

688 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "L_tm≤am", &
I¡Ty≥
, (
AnyVÆue
 *)&
L_tm≤amVÆue
, 
FALSE
);

689 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "GETS_MAX", &
I¡Ty≥
, (
AnyVÆue
 *)&
GETS_MAXVÆue
, 
FALSE
);

692 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "°dö", 
FûePåTy≥
, (
AnyVÆue
 *)&
°döVÆue
, 
FALSE
);

693 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "°dout", 
FûePåTy≥
, (
AnyVÆue
 *)&
°doutVÆue
, 
FALSE
);

694 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "°dîr", 
FûePåTy≥
, (
AnyVÆue
 *)&
°dîrVÆue
, 
FALSE
);

697 i‡(!
	`V¨übÀDeföed
(
	`TabÀSåRegi°î
("NULL")))

698 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "NULL", &
I¡Ty≥
, (
AnyVÆue
 *)&
ZîoVÆue
, 
FALSE
);

699 
	}
}

702 
	$PrötCh
(
OutCh
, 
FILE
 *
Såóm
)

704 
	`putc
(
OutCh
, 
Såóm
);

705 
	}
}

707 
	$PrötSim∂eI¡
(
Num
, 
FILE
 *
Såóm
)

709 
	`Ârötf
(
Såóm
, "%ld", 
Num
);

710 
	}
}

712 
	$PrötSå
(c⁄° *
Så
, 
FILE
 *
Såóm
)

714 
	`Âuts
(
Så
, 
Såóm
);

715 
	}
}

717 
	$PrötFP
(
Num
, 
FILE
 *
Såóm
)

719 
	`Ârötf
(
Såóm
, "%f", 
Num
);

720 
	}
}

	@stdlib.c

2 
	~"../öãΩªãr.h
"

4 #i‚de‡
BUILTIN_MINI_STDLIB


6 
	gZîoVÆue
 = 0;

8 #i‚de‡
NO_FP


9 
	$StdlibAtof
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

11 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`©of
(
P¨am
[0]->VÆ->
Poöãr
);

12 
	}
}

15 
	$StdlibAtoi
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

17 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`©oi
(
P¨am
[0]->VÆ->
Poöãr
);

18 
	}
}

20 
	$StdlibAtﬁ
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

22 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`©ﬁ
(
P¨am
[0]->VÆ->
Poöãr
);

23 
	}
}

25 #i‚de‡
NO_FP


26 
	$StdlibSåtod
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

28 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`°πod
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer);

29 
	}
}

32 
	$StdlibSåtﬁ
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

34 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`°πﬁ
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer, Param[2]->Val->Integer);

35 
	}
}

37 
	$StdlibSåtoul
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

39 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`°πoul
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer, Param[2]->Val->Integer);

40 
	}
}

42 
	$StdlibMÆloc
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

44 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`mÆloc
(
P¨am
[0]->VÆ->
I¡egî
);

45 
	}
}

47 
	$StdlibCÆloc
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

49 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`ˇŒoc
(
P¨am
[0]->VÆ->
I¡egî
, Param[1]->Val->Integer);

50 
	}
}

52 
	$StdlibRóŒoc
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

54 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`ªÆloc
(
P¨am
[0]->VÆ->Poöãr, P¨am[1]->VÆ->
I¡egî
);

55 
	}
}

57 
	$StdlibFªe
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

59 
	`‰ì
(
P¨am
[0]->
VÆ
->
Poöãr
);

60 
	}
}

62 
	$StdlibR™d
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

64 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`ønd
();

65 
	}
}

67 
	$StdlibSønd
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

69 
	`§™d
(
P¨am
[0]->
VÆ
->
I¡egî
);

70 
	}
}

72 
	$StdlibAb‹t
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

74 
	`ProgømFaû
(
P¨£r
, "abort");

75 
	}
}

77 
	$StdlibExô
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

79 
	`Pœtf‹mExô
(
P¨am
[0]->
VÆ
->
I¡egî
);

80 
	}
}

82 
	$StdlibGëív
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

84 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`gëív
(
P¨am
[0]->Val->Pointer);

85 
	}
}

87 
	$StdlibSy°em
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

89 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`sy°em
(
P¨am
[0]->VÆ->
Poöãr
);

90 
	}
}

93 
	$StdlibB£¨ch
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

95 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`b£¨ch
(
P¨am
[0]->VÆ->Poöãr, P¨am[1]->VÆ->Poöãr, P¨am[2]->VÆ->
I¡egî
, Param[3]->Val->Integer, ((*)())Param[4]->Val->Pointer);

96 
	}
}

99 
	$StdlibAbs
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

101 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`abs
(
P¨am
[0]->Val->Integer);

102 
	}
}

104 
	$StdlibLabs
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

106 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`œbs
(
P¨am
[0]->Val->Integer);

107 
	}
}

110 
	$StdlibDiv
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

112 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`div
(
P¨am
[0]->Val->Integer, Param[1]->Val->Integer);

113 
	}
}

115 
	$StdlibLdiv
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

117 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`ldiv
(
P¨am
[0]->Val->Integer, Param[1]->Val->Integer);

118 
	}
}

123 c⁄° 
	gStdlibDefs
[] = "\
 struct { \
 quot,Ñem; \
} div_t; \
\
 struct { \
 quot,Ñem; \
}Üdiv_t; \
";

135 
LibøryFun˘i⁄
 
	gStdlibFun˘i⁄s
[] =

137 #i‚de‡
NO_FP


138 { 
StdlibAtof
, "floatátof(char *);" },

139 { 
StdlibSåtod
, "float strtod(char *,char **);" },

141 { 
StdlibAtoi
, "intátoi(char *);" },

142 { 
StdlibAtﬁ
, "intátol(char *);" },

143 { 
StdlibSåtﬁ
, "int strtol(char *,char **,int);" },

144 { 
StdlibSåtoul
, "int strtoul(char *,char **,int);" },

145 { 
StdlibMÆloc
, "void *malloc(int);" },

146 { 
StdlibCÆloc
, "void *calloc(int,int);" },

147 { 
StdlibRóŒoc
, "void *realloc(void *,int);" },

148 { 
StdlibFªe
, "void free(void *);" },

149 { 
StdlibR™d
, "intÑand();" },

150 { 
StdlibSønd
, "void srand(int);" },

151 { 
StdlibAb‹t
, "voidábort();" },

152 { 
StdlibExô
, "voidÉxit(int);" },

153 { 
StdlibGëív
, "char *getenv(char *);" },

154 { 
StdlibSy°em
, "int system(char *);" },

157 { 
StdlibAbs
, "intábs(int);" },

158 { 
StdlibLabs
, "intÜabs(int);" },

160 { 
StdlibDiv
, "div_t div(int);" },

161 { 
StdlibLdiv
, "ldiv_tÜdiv(int);" },

163 { 
NULL
, NULL }

167 
	$StdlibSëupFunc
()

170 i‡(!
	`V¨übÀDeföed
(
	`TabÀSåRegi°î
("NULL")))

171 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "NULL", &
I¡Ty≥
, (
AnyVÆue
 *)&
ZîoVÆue
, 
FALSE
);

172 
	}
}

	@string.c

2 
	~"../öãΩªãr.h
"

4 #i‚de‡
BUILTIN_MINI_STDLIB


6 
	gZîoVÆue
 = 0;

8 
	$SåögSå˝y
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

10 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`°r˝y
(
P¨am
[0]->Val->Pointer, Param[1]->Val->Pointer);

11 
	}
}

13 
	$SåögSån˝y
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

15 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`°∫˝y
(
P¨am
[0]->VÆ->Poöãr, P¨am[1]->VÆ->Poöãr, P¨am[2]->VÆ->
I¡egî
);

16 
	}
}

18 
	$SåögSåcmp
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

20 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`°rcmp
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer);

21 
	}
}

23 
	$SåögSåncmp
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

25 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`°∫cmp
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer, Param[2]->Val->Integer);

26 
	}
}

28 
	$SåögSåˇt
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

30 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`°rˇt
(
P¨am
[0]->Val->Pointer, Param[1]->Val->Pointer);

31 
	}
}

33 
	$SåögSånˇt
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

35 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`°∫ˇt
(
P¨am
[0]->VÆ->Poöãr, P¨am[1]->VÆ->Poöãr, P¨am[2]->VÆ->
I¡egî
);

36 
	}
}

38 
	$SåögIndex
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

40 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`ödex
(
P¨am
[0]->VÆ->Poöãr, P¨am[1]->VÆ->
I¡egî
);

41 
	}
}

43 
	$SåögRödex
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

45 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`rödex
(
P¨am
[0]->VÆ->Poöãr, P¨am[1]->VÆ->
I¡egî
);

46 
	}
}

48 
	$SåögSåÀn
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

50 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`°æí
(
P¨am
[0]->VÆ->
Poöãr
);

51 
	}
}

53 
	$SåögMem£t
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

55 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`mem£t
(
P¨am
[0]->VÆ->Poöãr, P¨am[1]->VÆ->
I¡egî
, Param[2]->Val->Integer);

56 
	}
}

58 
	$SåögMem˝y
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

60 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`mem˝y
(
P¨am
[0]->VÆ->Poöãr, P¨am[1]->VÆ->Poöãr, P¨am[2]->VÆ->
I¡egî
);

61 
	}
}

63 
	$SåögMemcmp
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

65 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`memcmp
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer, Param[2]->Val->Integer);

66 
	}
}

68 
	$SåögMemmove
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

70 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`memmove
(
P¨am
[0]->VÆ->Poöãr, P¨am[1]->VÆ->Poöãr, P¨am[2]->VÆ->
I¡egî
);

71 
	}
}

73 
	$SåögMemchr
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

75 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`memchr
(
P¨am
[0]->VÆ->Poöãr, P¨am[1]->VÆ->
I¡egî
, Param[2]->Val->Integer);

76 
	}
}

78 
	$SåögSåchr
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

80 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`°rchr
(
P¨am
[0]->VÆ->Poöãr, P¨am[1]->VÆ->
I¡egî
);

81 
	}
}

83 
	$SåögSårchr
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

85 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`°ºchr
(
P¨am
[0]->VÆ->Poöãr, P¨am[1]->VÆ->
I¡egî
);

86 
	}
}

88 
	$SåögSåcﬁl
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

90 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`°rcﬁl
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer);

91 
	}
}

93 
	$SåögSåîr‹
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

95 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`°ªº‹
(
P¨am
[0]->VÆ->
I¡egî
);

96 
	}
}

98 
	$SåögSå•n
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

100 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`°r•n
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer);

101 
	}
}

103 
	$SåögSåc•n
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

105 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`°rc•n
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer);

106 
	}
}

108 
	$SåögSåpbrk
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

110 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`°Ωbrk
(
P¨am
[0]->Val->Pointer, Param[1]->Val->Pointer);

111 
	}
}

113 
	$SåögSå°r
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

115 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`°r°r
(
P¨am
[0]->Val->Pointer, Param[1]->Val->Pointer);

116 
	}
}

118 
	$SåögSåtok
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

120 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`°πok
(
P¨am
[0]->Val->Pointer, Param[1]->Val->Pointer);

121 
	}
}

123 
	$SåögSåx‰m
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

125 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`°rx‰m
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer, Param[2]->Val->Integer);

126 
	}
}

128 
	$SåögSådup
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

130 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`°rdup
(
P¨am
[0]->Val->Pointer);

131 
	}
}

133 
	$SåögSåtok_r
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

135 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`°πok_r
(
P¨am
[0]->Val->Pointer, Param[1]->Val->Pointer, Param[2]->Val->Pointer);

136 
	}
}

139 
LibøryFun˘i⁄
 
	gSåögFun˘i⁄s
[] =

141 { 
SåögIndex
, "char *index(char *,int);" },

142 { 
SåögRödex
, "char *rindex(char *,int);" },

143 { 
SåögMem˝y
, "void *memcpy(void *,void *,int);" },

144 { 
SåögMemmove
, "void *memmove(void *,void *,int);" },

145 { 
SåögMemchr
, "void *memchr(char *,int,int);" },

146 { 
SåögMemcmp
, "int memcmp(void *,void *,int);" },

147 { 
SåögMem£t
, "void *memset(void *,int,int);" },

148 { 
SåögSåˇt
, "char *strcat(char *,char *);" },

149 { 
SåögSånˇt
, "char *strncat(char *,char *,int);" },

150 { 
SåögSåchr
, "char *strchr(char *,int);" },

151 { 
SåögSårchr
, "char *strrchr(char *,int);" },

152 { 
SåögSåcmp
, "int strcmp(char *,char *);" },

153 { 
SåögSåncmp
, "int strncmp(char *,char *,int);" },

154 { 
SåögSåcﬁl
, "int strcoll(char *,char *);" },

155 { 
SåögSå˝y
, "char *strcpy(char *,char *);" },

156 { 
SåögSån˝y
, "char *strncpy(char *,char *,int);" },

157 { 
SåögSåîr‹
, "char *strerror(int);" },

158 { 
SåögSåÀn
, "int strlen(char *);" },

159 { 
SåögSå•n
, "int strspn(char *,char *);" },

160 { 
SåögSåc•n
, "int strcspn(char *,char *);" },

161 { 
SåögSåpbrk
, "char *strpbrk(char *,char *);" },

162 { 
SåögSå°r
, "char *strstr(char *,char *);" },

163 { 
SåögSåtok
, "char *strtok(char *,char *);" },

164 { 
SåögSåx‰m
, "int strxfrm(char *,char *,int);" },

165 { 
SåögSådup
, "char *strdup(char *);" },

166 { 
SåögSåtok_r
, "char *strtok_r(char *,char *,char **);" },

167 { 
NULL
, NULL }

171 
	$SåögSëupFunc
()

174 i‡(!
	`V¨übÀDeföed
(
	`TabÀSåRegi°î
("NULL")))

175 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "NULL", &
I¡Ty≥
, (
AnyVÆue
 *)&
ZîoVÆue
, 
FALSE
);

176 
	}
}

	@time.c

2 
	~<time.h
>

3 
	~"../öãΩªãr.h
"

5 #i‚de‡
BUILTIN_MINI_STDLIB


7 
	gCLOCKS_PER_SECVÆue
 = 
CLOCKS_PER_SEC
;

9 #ifde‡
CLK_PER_SEC


10 
	gCLK_PER_SECVÆue
 = 
CLK_PER_SEC
;

13 #ifde‡
CLK_TCK


14 
	gCLK_TCKVÆue
 = 
CLK_TCK
;

17 
	$StdAs˘ime
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

19 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`as˘ime
(
P¨am
[0]->Val->Pointer);

20 
	}
}

22 
	$StdClock
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

24 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`˛ock
();

25 
	}
}

27 
	$StdCtime
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

29 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`˘ime
(
P¨am
[0]->Val->Pointer);

30 
	}
}

32 #i‚de‡
NO_FP


33 
	$StdDif·ime
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

35 
Rëu∫VÆue
->
VÆ
->
FP
 = 
	`dif·ime
((
time_t
)
P¨am
[0]->VÆ->
I¡egî
, Param[1]->Val->Integer);

36 
	}
}

39 
	$StdGmtime
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

41 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`gmtime
(
P¨am
[0]->Val->Pointer);

42 
	}
}

44 
	$StdGmtime_r
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

46 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`gmtime_r
(
P¨am
[0]->Val->Pointer, Param[1]->Val->Pointer);

47 
	}
}

49 
	$StdLoˇ…ime
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

51 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`loˇ…ime
(
P¨am
[0]->Val->Pointer);

52 
	}
}

54 
	$StdMktime
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

56 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`mktime
(
P¨am
[0]->VÆ->
Poöãr
);

57 
	}
}

59 
	$StdTime
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

61 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`time
(
P¨am
[0]->VÆ->
Poöãr
);

62 
	}
}

64 
	$StdSå·ime
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

66 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`°r·ime
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Integer, Param[2]->Val->Pointer, Param[3]->Val->Pointer);

67 
	}
}

69 
	$StdSå±ime
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

71 *
	`°Ωtime
(c⁄° *
s
, c⁄° *
f‹m©
, 
tm
 *tm);

73 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`°Ωtime
(
P¨am
[0]->Val->Pointer, Param[1]->Val->Pointer, Param[2]->Val->Pointer);

74 
	}
}

76 
	$StdTimegm
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

78 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`timegm
(
P¨am
[0]->VÆ->
Poöãr
);

79 
	}
}

82 c⁄° 
	gStdTimeDefs
[] = "\
 intÅime_t; \
 int clock_t;\
";

88 
LibøryFun˘i⁄
 
	gStdTimeFun˘i⁄s
[] =

90 { 
StdAs˘ime
, "char *asctime(structÅm *);" },

91 { 
StdClock
, "time_t clock();" },

92 { 
StdCtime
, "char *ctime(int *);" },

93 #i‚de‡
NO_FP


94 { 
StdDif·ime
, "double difftime(int, int);" },

96 { 
StdGmtime
, "structÅm *gmtime(int *);" },

97 { 
StdGmtime_r
, "structÅm *gmtime_r(int *, structÅm *);" },

98 { 
StdLoˇ…ime
, "structÅm *localtime(int *);" },

99 { 
StdMktime
, "int mktime(structÅm *ptm);" },

100 { 
StdTime
, "intÅime(int *);" },

101 { 
StdSå·ime
, "int strftime(char *, int, char *, structÅm *);" },

102 { 
StdSå±ime
, "char *strptime(char *, char *, structÅm *);" },

103 { 
StdTimegm
, "intÅimegm(structÅm *);" },

104 { 
NULL
, NULL }

109 
	$StdTimeSëupFunc
()

112 
	`Ty≥Cª©eO∑queSåu˘
(
NULL
, 
	`TabÀSåRegi°î
("tm"), (
tm
));

115 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "CLOCKS_PER_SEC", &
I¡Ty≥
, (
AnyVÆue
 *)&
CLOCKS_PER_SECVÆue
, 
FALSE
);

116 #ifde‡
CLK_PER_SEC


117 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "CLK_PER_SEC", &
I¡Ty≥
, (
AnyVÆue
 *)&
CLK_PER_SECVÆue
, 
FALSE
);

119 #ifde‡
CLK_TCK


120 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "CLK_TCK", &
I¡Ty≥
, (
AnyVÆue
 *)&
CLK_TCKVÆue
, 
FALSE
);

122 
	}
}

	@unistd.c

2 
	~<°dio.h
>

3 
	~<uni°d.h
>

4 
	~<limôs.h
>

5 
	~"../öãΩªãr.h
"

7 #i‚de‡
BUILTIN_MINI_STDLIB


9 
	gZîoVÆue
 = 0;

11 
	$Uni°dAc˚ss
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

13 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`ac˚ss
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Integer);

14 
	}
}

16 
	$Uni°dAœrm
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

18 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`Æ¨m
(
P¨am
[0]->Val->Integer);

19 
	}
}

21 
	$Uni°dChdú
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

23 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`chdú
(
P¨am
[0]->VÆ->
Poöãr
);

24 
	}
}

26 
	$Uni°dChroŸ
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

28 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`chroŸ
(
P¨am
[0]->VÆ->
Poöãr
);

29 
	}
}

31 
	$Uni°dChown
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

33 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`chown
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Integer, Param[2]->Val->Integer);

34 
	}
}

36 
	$Uni°dClo£
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

38 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`˛o£
(
P¨am
[0]->Val->Integer);

39 
	}
}

41 
	$Uni°dC⁄f°r
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

43 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`c⁄f°r
(
P¨am
[0]->VÆ->I¡egî, P¨am[1]->VÆ->
Poöãr
, Param[2]->Val->Integer);

44 
	}
}

46 
	$Uni°dCãrmid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

48 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`˘îmid
(
P¨am
[0]->Val->Pointer);

49 
	}
}

52 
	$Uni°dCu£rid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

54 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`cu£rid
(
P¨am
[0]->Val->Pointer);

55 
	}
}

58 
	$Uni°dDup
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

60 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`dup
(
P¨am
[0]->Val->Integer);

61 
	}
}

63 
	$Uni°dDup2
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

65 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`dup2
(
P¨am
[0]->Val->Integer, Param[1]->Val->Integer);

66 
	}
}

68 
	$Uni°d_Exô
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

70 
	`_exô
(
P¨am
[0]->
VÆ
->
I¡egî
);

71 
	}
}

73 
	$Uni°dFchown
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

75 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`fchown
(
P¨am
[0]->Val->Integer, Param[1]->Val->Integer, Param[2]->Val->Integer);

76 
	}
}

78 
	$Uni°dFchdú
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

80 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`fchdú
(
P¨am
[0]->Val->Integer);

81 
	}
}

83 
	$Uni°dFd©async
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

85 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`fd©async
(
P¨am
[0]->Val->Integer);

86 
	}
}

88 
	$Uni°dF‹k
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

90 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`f‹k
();

91 
	}
}

93 
	$Uni°dF∑thc⁄f
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

95 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`Â©hc⁄f
(
P¨am
[0]->Val->Integer, Param[1]->Val->Integer);

96 
	}
}

98 
	$Uni°dFsync
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

100 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`fsync
(
P¨am
[0]->Val->Integer);

101 
	}
}

103 
	$Uni°dFåunˇã
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

105 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`·runˇã
(
P¨am
[0]->Val->Integer, Param[1]->Val->Integer);

106 
	}
}

108 
	$Uni°dGëcwd
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

110 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`gëcwd
(
P¨am
[0]->VÆ->Poöãr, P¨am[1]->VÆ->
I¡egî
);

111 
	}
}

113 
	$Uni°dGëdèbÀsize
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

115 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`gëdèbÀsize
();

116 
	}
}

118 
	$Uni°dGëegid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

120 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`gëegid
();

121 
	}
}

123 
	$Uni°dGëeuid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

125 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`gëeuid
();

126 
	}
}

128 
	$Uni°dGëgid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

130 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`gëgid
();

131 
	}
}

133 
	$Uni°dGëho°id
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

135 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`gëho°id
();

136 
	}
}

138 
	$Uni°dGëlogö
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

140 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`gëlogö
();

141 
	}
}

143 
	$Uni°dGëlogö_r
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

145 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`gëlogö_r
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Integer);

146 
	}
}

148 
	$Uni°dGë∑gesize
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

150 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`gë∑gesize
();

151 
	}
}

153 
	$Uni°dGë∑ss
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

155 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`gë∑ss
(
P¨am
[0]->Val->Pointer);

156 
	}
}

159 
	$Uni°dGëpgid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

161 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`gëpgid
(
P¨am
[0]->Val->Integer);

162 
	}
}

165 
	$Uni°dGëpgΩ
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

167 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`gëpgΩ
();

168 
	}
}

170 
	$Uni°dGëpid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

172 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`gëpid
();

173 
	}
}

175 
	$Uni°dGëµid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

177 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`gëµid
();

178 
	}
}

181 
	$Uni°dGësid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

183 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`gësid
(
P¨am
[0]->Val->Integer);

184 
	}
}

187 
	$Uni°dGëuid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

189 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`gëuid
();

190 
	}
}

192 
	$Uni°dGëwd
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

194 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`gëcwd
(
P¨am
[0]->VÆ->Poöãr, 
PATH_MAX
);

195 
	}
}

197 
	$Uni°dIßây
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

199 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`ißây
(
P¨am
[0]->Val->Integer);

200 
	}
}

202 
	$Uni°dLchown
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

204 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`lchown
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Integer, Param[2]->Val->Integer);

205 
	}
}

207 
	$Uni°dLök
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

209 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`lök
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer);

210 
	}
}

212 
	$Uni°dLockf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

214 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`lockf
(
P¨am
[0]->Val->Integer, Param[1]->Val->Integer, Param[2]->Val->Integer);

215 
	}
}

217 
	$Uni°dL£ek
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

219 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`l£ek
(
P¨am
[0]->Val->Integer, Param[1]->Val->Integer, Param[2]->Val->Integer);

220 
	}
}

222 
	$Uni°dNi˚
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

224 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`ni˚
(
P¨am
[0]->Val->Integer);

225 
	}
}

227 
	$Uni°dP©hc⁄f
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

229 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`∑thc⁄f
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Integer);

230 
	}
}

232 
	$Uni°dPau£
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

234 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`∑u£
();

235 
	}
}

238 
	$Uni°dPªad
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

240 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`¥ód
(
P¨am
[0]->VÆ->I¡egî, P¨am[1]->VÆ->
Poöãr
, Param[2]->Val->Integer, Param[3]->Val->Integer);

241 
	}
}

243 
	$Uni°dPwrôe
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

245 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`pwrôe
(
P¨am
[0]->VÆ->I¡egî, P¨am[1]->VÆ->
Poöãr
, Param[2]->Val->Integer, Param[3]->Val->Integer);

246 
	}
}

249 
	$Uni°dRód
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

251 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`ªad
(
P¨am
[0]->VÆ->I¡egî, P¨am[1]->VÆ->
Poöãr
, Param[2]->Val->Integer);

252 
	}
}

254 
	$Uni°dRódlök
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

256 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`ªadlök
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer, Param[2]->Val->Integer);

257 
	}
}

259 
	$Uni°dRmdú
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

261 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`rmdú
(
P¨am
[0]->VÆ->
Poöãr
);

262 
	}
}

264 
	$Uni°dSbrk
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

266 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`sbrk
(
P¨am
[0]->VÆ->
I¡egî
);

267 
	}
}

269 
	$Uni°dSëgid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

271 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`£tgid
(
P¨am
[0]->Val->Integer);

272 
	}
}

274 
	$Uni°dSëpgid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

276 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`£çgid
(
P¨am
[0]->Val->Integer, Param[1]->Val->Integer);

277 
	}
}

279 
	$Uni°dSëpgΩ
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

281 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`£çgΩ
();

282 
	}
}

284 
	$Uni°dSëªgid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

286 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`£åegid
(
P¨am
[0]->Val->Integer, Param[1]->Val->Integer);

287 
	}
}

289 
	$Uni°dSëªuid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

291 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`£åeuid
(
P¨am
[0]->Val->Integer, Param[1]->Val->Integer);

292 
	}
}

294 
	$Uni°dSësid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

296 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`£tsid
();

297 
	}
}

299 
	$Uni°dSëuid
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

301 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`£tuid
(
P¨am
[0]->Val->Integer);

302 
	}
}

304 
	$Uni°dSÀï
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

306 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`¶ìp
(
P¨am
[0]->Val->Integer);

307 
	}
}

310 
	$Uni°dSwab
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

312 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`swab
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer, Param[2]->Val->Integer);

313 
	}
}

316 
	$Uni°dSymlök
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

318 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`symlök
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Pointer);

319 
	}
}

321 
	$Uni°dSync
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

323 
	`sync
();

324 
	}
}

326 
	$Uni°dSysc⁄f
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

328 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`sysc⁄f
(
P¨am
[0]->Val->Integer);

329 
	}
}

331 
	$Uni°dTcgëpgΩ
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

333 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`tcgëpgΩ
(
P¨am
[0]->Val->Integer);

334 
	}
}

336 
	$Uni°dTc£çgΩ
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

338 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`tc£çgΩ
(
P¨am
[0]->Val->Integer, Param[1]->Val->Integer);

339 
	}
}

341 
	$Uni°dTrunˇã
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

343 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`åunˇã
(
P¨am
[0]->VÆ->
Poöãr
, Param[1]->Val->Integer);

344 
	}
}

346 
	$Uni°dTty«me
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

348 
Rëu∫VÆue
->
VÆ
->
Poöãr
 = 
	`ây«me
(
P¨am
[0]->VÆ->
I¡egî
);

349 
	}
}

351 
	$Uni°dTty«me_r
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

353 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`ây«me_r
(
P¨am
[0]->VÆ->I¡egî, P¨am[1]->VÆ->
Poöãr
, Param[2]->Val->Integer);

354 
	}
}

356 
	$Uni°dUÆ¨m
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

358 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`uÆ¨m
(
P¨am
[0]->Val->Integer, Param[1]->Val->Integer);

359 
	}
}

361 
	$Uni°dU∆ök
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

363 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`u∆ök
(
P¨am
[0]->VÆ->
Poöãr
);

364 
	}
}

366 
	$Uni°dU¶ìp
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

368 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`u¶ìp
(
P¨am
[0]->Val->Integer);

369 
	}
}

371 
	$Uni°dVf‹k
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

373 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`vf‹k
();

374 
	}
}

376 
	$Uni°dWrôe
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
)

378 
Rëu∫VÆue
->
VÆ
->
I¡egî
 = 
	`wrôe
(
P¨am
[0]->VÆ->I¡egî, P¨am[1]->VÆ->
Poöãr
, Param[2]->Val->Integer);

379 
	}
}

383 c⁄° 
	gUni°dDefs
[] = "\
 int uid_t; \
 int gid_t; \
 intÖid_t; \
 int off_t; \
 int size_t; \
 int ssize_t; \
 int useconds_t;\
 int intptr_t;\
";

395 
LibøryFun˘i⁄
 
	gUni°dFun˘i⁄s
[] =

397 { 
Uni°dAc˚ss
, "intáccess(char *, int);" },

398 { 
Uni°dAœrm
, "unsigned intálarm(unsigned int);" },

400 { 
Uni°dChdú
, "int chdir(char *);" },

401 { 
Uni°dChroŸ
, "int chroot(char *);" },

402 { 
Uni°dChown
, "int chown(char *, uid_t, gid_t);" },

403 { 
Uni°dClo£
, "int close(int);" },

404 { 
Uni°dC⁄f°r
, "size_t confstr(int, char *, size_t);" },

405 { 
Uni°dCãrmid
, "char *ctermid(char *);" },

407 { 
Uni°dDup
, "int dup(int);" },

408 { 
Uni°dDup2
, "int dup2(int, int);" },

416 { 
Uni°d_Exô
, "void _exit(int);" },

417 { 
Uni°dFchown
, "int fchown(int, uid_t, gid_t);" },

418 { 
Uni°dFchdú
, "int fchdir(int);" },

419 { 
Uni°dFd©async
, "int fdatasync(int);" },

420 { 
Uni°dF‹k
, "pid_t fork(void);" },

421 { 
Uni°dF∑thc⁄f
, "long fpathconf(int, int);" },

422 { 
Uni°dFsync
, "int fsync(int);" },

423 { 
Uni°dFåunˇã
, "int ftruncate(int, off_t);" },

424 { 
Uni°dGëcwd
, "char *getcwd(char *, size_t);" },

425 { 
Uni°dGëdèbÀsize
, "int getdtablesize(void);" },

426 { 
Uni°dGëegid
, "gid_t getegid(void);" },

427 { 
Uni°dGëeuid
, "uid_t geteuid(void);" },

428 { 
Uni°dGëgid
, "gid_t getgid(void);" },

430 { 
Uni°dGëho°id
, "long gethostid(void);" },

431 { 
Uni°dGëlogö
, "char *getlogin(void);" },

432 { 
Uni°dGëlogö_r
, "int getlogin_r(char *, size_t);" },

434 { 
Uni°dGë∑gesize
, "int getpagesize(void);" },

435 { 
Uni°dGë∑ss
, "char *getpass(char *);" },

437 { 
Uni°dGëpgΩ
, "pid_t getpgrp(void);" },

438 { 
Uni°dGëpid
, "pid_t getpid(void);" },

439 { 
Uni°dGëµid
, "pid_t getppid(void);" },

441 { 
Uni°dGëuid
, "uid_t getuid(void);" },

442 { 
Uni°dGëwd
, "char *getwd(char *);" },

443 { 
Uni°dIßây
, "int isatty(int);" },

444 { 
Uni°dLchown
, "intÜchown(char *, uid_t, gid_t);" },

445 { 
Uni°dLök
, "intÜink(char *, char *);" },

446 { 
Uni°dLockf
, "intÜockf(int, int, off_t);" },

447 { 
Uni°dL£ek
, "off_tÜseek(int, off_t, int);" },

448 { 
Uni°dNi˚
, "intÇice(int);" },

449 { 
Uni°dP©hc⁄f
, "longÖathconf(char *, int);" },

450 { 
Uni°dPau£
, "intÖause(void);" },

455 { 
Uni°dRód
, "ssize_tÑead(int, void *, size_t);" },

456 { 
Uni°dRódlök
, "intÑeadlink(char *, char *, size_t);" },

457 { 
Uni°dRmdú
, "intÑmdir(char *);" },

458 { 
Uni°dSbrk
, "void *sbrk(intptr_t);" },

459 { 
Uni°dSëgid
, "int setgid(gid_t);" },

460 { 
Uni°dSëpgid
, "int setpgid(pid_t,Öid_t);" },

461 { 
Uni°dSëpgΩ
, "pid_t setpgrp(void);" },

462 { 
Uni°dSëªgid
, "int setregid(gid_t, gid_t);" },

463 { 
Uni°dSëªuid
, "int setreuid(uid_t, uid_t);" },

464 { 
Uni°dSësid
, "pid_t setsid(void);" },

465 { 
Uni°dSëuid
, "int setuid(uid_t);" },

466 { 
Uni°dSÀï
, "unsigned int sleep(unsigned int);" },

468 { 
Uni°dSymlök
, "int symlink(char *, char *);" },

469 { 
Uni°dSync
, "void sync(void);" },

470 { 
Uni°dSysc⁄f
, "long sysconf(int);" },

471 { 
Uni°dTcgëpgΩ
, "pid_tÅcgetpgrp(int);" },

472 { 
Uni°dTc£çgΩ
, "intÅcsetpgrp(int,Öid_t);" },

473 { 
Uni°dTrunˇã
, "intÅruncate(char *, off_t);" },

474 { 
Uni°dTty«me
, "char *ttyname(int);" },

475 { 
Uni°dTty«me_r
, "intÅtyname_r(int, char *, size_t);" },

476 { 
Uni°dUÆ¨m
, "useconds_t ualarm(useconds_t, useconds_t);" },

477 { 
Uni°dU∆ök
, "int unlink(char *);" },

478 { 
Uni°dU¶ìp
, "int usleep(useconds_t);" },

479 { 
Uni°dVf‹k
, "pid_t vfork(void);" },

480 { 
Uni°dWrôe
, "ssize_t write(int, void *, size_t);" },

481 { 
NULL
, NULL }

485 
	$Uni°dSëupFunc
()

488 i‡(!
	`V¨übÀDeföed
(
	`TabÀSåRegi°î
("NULL")))

489 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "NULL", &
I¡Ty≥
, (
AnyVÆue
 *)&
ZîoVÆue
, 
FALSE
);

492 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "›èrg", 
Ch¨PåTy≥
, (
AnyVÆue
 *)&
›èrg
, 
TRUE
);

493 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "›töd", &
I¡Ty≥
, (
AnyVÆue
 *)&
›töd
, 
TRUE
);

494 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "›ãº", &
I¡Ty≥
, (
AnyVÆue
 *)&
›ãº
, 
TRUE
);

495 
	`V¨übÀDeföePœtf‹mV¨
(
NULL
, "›t›t", &
I¡Ty≥
, (
AnyVÆue
 *)&
›t›t
, 
TRUE
);

496 
	}
}

	@../interpreter.h

1 #i‚de‡
INTERPRETER_H


2 
	#INTERPRETER_H


	)

4 
	~"∂©f‹m.h
"

8 #i‚de‡
TRUE


9 
	#TRUE
 1

	)

10 
	#FALSE
 0

	)

13 #i‚de‡
NULL


14 
	#NULL
 0

	)

17 #i‚de‡
mö


18 
	#mö
(
x
,
y
Ë(((x)<(y))?(x):(y))

	)

21 
	#MEM_ALIGN
(
x
Ë(((xË+ (
ALIGN_TYPE
Ë- 1Ë& ~((ALIGN_TYPE)-1))

	)

23 
	#GETS_BUF_MAX
 256

	)

26 #ifde‡
BUILTIN_MINI_STDLIB


27 
OuçutSåóm
 
	tIOFILE
;

29 
FILE
 
	tIOFILE
;

33 #i‚de‡
NO_FP


34 
	#IS_FP
(
v
Ë((v)->
Typ
->
Ba£
 =
Ty≥FP
)

	)

35 
	#FP_VAL
(
v
Ë((v)->
VÆ
->
FP
)

	)

37 
	#IS_FP
(
v
Ë0

	)

38 
	#FP_VAL
(
v
Ë0

	)

41 
	#IS_POINTER_COERCIBLE
(
v
, 
≠
Ë(◊pË? ((v)->
Typ
->
Ba£
 =
Ty≥Poöãr
Ë: 0)

	)

42 
	#POINTER_COERCE
(
v
Ë(()(v)->
VÆ
->
Poöãr
)

	)

44 
	#IS_INTEGER_NUMERIC_TYPE
(
t
Ë(—)->
Ba£
 >
Ty≥I¡
 && (t)->Ba£ <
Ty≥Unsig√dL⁄g
)

	)

45 
	#IS_INTEGER_NUMERIC
(
v
Ë
	`IS_INTEGER_NUMERIC_TYPE
((v)->
Typ
)

	)

46 
	#IS_NUMERIC_COERCIBLE
(
v
Ë(
	`IS_INTEGER_NUMERIC
(vË|| 
	`IS_FP
(v))

	)

47 
	#IS_NUMERIC_COERCIBLE_PLUS_POINTERS
(
v
,
≠
Ë(
	`IS_NUMERIC_COERCIBLE
(vË|| 
	`IS_POINTER_COERCIBLE
(v,≠))

	)

50 
	gTabÀ
;

53 
	eLexTokí


55  
	mTokíN⁄e
,

56  
	mTokíComma
,

57  
	mTokíAssign
, 
	mTokíAddAssign
, 
	mTokíSubåa˘Assign
, 
	mTokíMu…ùlyAssign
, 
	mTokíDivideAssign
, 
	mTokíModulusAssign
,

58  
	mTokíShi·Le·Assign
, 
	mTokíShi·RightAssign
, 
	mTokíArôhmëicAndAssign
, 
	mTokíArôhmëicOrAssign
, 
	mTokíArôhmëicEx‹Assign
,

59  
	mTokíQue°i⁄M¨k
, 
	mTokíCﬁ⁄
,

60  
	mTokíLogiˇlOr
,

61  
	mTokíLogiˇlAnd
,

62  
	mTokíArôhmëicOr
,

63  
	mTokíArôhmëicEx‹
,

64  
	mTokíAm≥rßnd
,

65  
	mTokíEquÆ
, 
	mTokíNŸEquÆ
,

66  
	mTokíLessTh™
, 
	mTokíGª©îTh™
, 
	mTokíLessEquÆ
, 
	mTokíGª©îEquÆ
,

67  
	mTokíShi·Le·
, 
	mTokíShi·Right
,

68  
	mTokíPlus
, 
	mTokíMöus
,

69  
	mTokíA°îisk
, 
	mTokíSœsh
, 
	mTokíModulus
,

70  
	mTokíIn¸emít
, 
	mTokíDe¸emít
, 
	mTokíU«ryNŸ
, 
	mTokíU«ryEx‹
, 
	mTokíSizeof
, 
	mTokíCa°
,

71  
	mTokíLe·Squ¨eBøckë
, 
	mTokíRightSqu¨eBøckë
, 
	mTokíDŸ
, 
	mTokíAºow
,

72  
	mTokíO≥nBøckë
, 
	mTokíClo£Bøckë
,

73  
	mTokíIdítifõr
, 
	mTokíI¡egîC⁄°™t
, 
	mTokíFPC⁄°™t
, 
	mTokíSåögC⁄°™t
, 
	mTokíCh¨a˘îC⁄°™t
,

74  
	mTokíSemicﬁ⁄
, 
	mTokíEŒùsis
,

75  
	mTokíLe·Bø˚
, 
	mTokíRightBø˚
,

76  
	mTokíI¡Ty≥
, 
	mTokíCh¨Ty≥
, 
	mTokíFlﬂtTy≥
, 
	mTokíDoubÀTy≥
, 
	mTokíVoidTy≥
, 
	mTokíEnumTy≥
,

77  
	mTokíL⁄gTy≥
, 
	mTokíSig√dTy≥
, 
	mTokíSh‹tTy≥
, 
	mTokíSèticTy≥
, 
	mTokíAutoTy≥
, 
	mTokíRegi°îTy≥
, 
	mTokíExã∫Ty≥
, 
	mTokíSåu˘Ty≥
, 
	mTokíUni⁄Ty≥
, 
	mTokíUnsig√dTy≥
, 
	mTokíTy≥def
,

78  
	mTokíC⁄töue
, 
	mTokíDo
, 
	mTokíEl£
, 
	mTokíF‹
, 
	mTokíGŸo
, 
	mTokíIf
, 
	mTokíWhûe
, 
	mTokíBªak
, 
	mTokíSwôch
, 
	mTokíCa£
, 
	mTokíDeÁu…
, 
	mTokíRëu∫
,

79  
	mTokíHashDeföe
, 
	mTokíHashIn˛ude
, 
	mTokíHashIf
, 
	mTokíHashIfdef
, 
	mTokíHashI‚def
, 
	mTokíHashEl£
, 
	mTokíHashEndif
,

80  
	mTokíNew
, 
	mTokíDñëe
,

81  
	mTokíO≥nMa¸oBøckë
,

82  
	mTokíEOF
, 
	mTokíEndOfLöe
, 
	mTokíEndOfFun˘i⁄


86 
	sAŒocNode


88 
	mSize
;

89 
AŒocNode
 *
	mNextFªe
;

93 
	eRunMode


95 
	mRunModeRun
,

96 
	mRunModeSkù
,

97 
	mRunModeRëu∫
,

98 
	mRunModeCa£Sórch
,

99 
	mRunModeBªak
,

100 
	mRunModeC⁄töue
,

101 
	mRunModeGŸo


105 
	sP¨£Sèã


107 c⁄° *
	mPos
;

108 c⁄° *
	mFûeName
;

109 
	mLöe
;

110 
	mCh¨a˘îPos
;

111 
RunMode
 
	mMode
;

112 
	mSórchLabñ
;

113 c⁄° *
	mSórchGŸoLabñ
;

114 
	mHashIfLevñ
;

115 
	mHashIfEvÆu©eToLevñ
;

116 c⁄° *
	mSour˚Text
;

120 
	eBa£Ty≥


122 
	mTy≥Void
,

123 
	mTy≥I¡
,

124 
	mTy≥Sh‹t
,

125 
	mTy≥Ch¨
,

126 
	mTy≥L⁄g
,

127 
	mTy≥Unsig√dI¡
,

128 
	mTy≥Unsig√dSh‹t
,

129 
	mTy≥Unsig√dL⁄g
,

130 #i‚de‡
NO_FP


131 
	mTy≥FP
,

133 
	mTy≥Fun˘i⁄
,

134 
	mTy≥Ma¸o
,

135 
	mTy≥Poöãr
,

136 
	mTy≥Aºay
,

137 
	mTy≥Såu˘
,

138 
	mTy≥Uni⁄
,

139 
	mTy≥Enum
,

140 
	mTy≥GŸoLabñ
,

141 
	mTy≥_Ty≥


145 
	sVÆueTy≥


147 
Ba£Ty≥
 
	mBa£
;

148 
	mAºaySize
;

149 
	mSizeof
;

150 
	mAlignByãs
;

151 c⁄° *
	mIdítifõr
;

152 
VÆueTy≥
 *
	mFromTy≥
;

153 
VÆueTy≥
 *
	mDîivedTy≥Li°
;

154 
VÆueTy≥
 *
	mNext
;

155 
TabÀ
 *
	mMembîs
;

156 
	mOnHóp
;

157 
	mSèticQuÆifõr
;

161 
	sFuncDef


163 
VÆueTy≥
 *
	mRëu∫Ty≥
;

164 
	mNumP¨ams
;

165 
	mV¨Args
;

166 
VÆueTy≥
 **
	mP¨amTy≥
;

167 **
	mP¨amName
;

168 (*
	mI¡rösic
)();

169 
P¨£Sèã
 
	mBody
;

173 
	sMa¸oDef


175 
	mNumP¨ams
;

176 **
	mP¨amName
;

177 
P¨£Sèã
 
	mBody
;

181 
	uAnyVÆue


183 
	mCh¨a˘î
;

184 
	mSh‹tI¡egî
;

185 
	mI¡egî
;

186 
	mL⁄gI¡egî
;

187 
	mUnsig√dSh‹tI¡egî
;

188 
	mUnsig√dI¡egî
;

189 
	mUnsig√dL⁄gI¡egî
;

190 *
	mIdítifõr
;

191 
	mAºayMem
[2];

192 
VÆueTy≥
 *
	mTyp
;

193 
FuncDef
 
	mFuncDef
;

194 
Ma¸oDef
 
	mMa¸oDef
;

195 #i‚de‡
NO_FP


196 
	mFP
;

198 *
	mPoöãr
;

201 
	sVÆue


203 
VÆueTy≥
 *
	mTyp
;

204 
AnyVÆue
 *
	mVÆ
;

205 
VÆue
 *
	mLVÆueFrom
;

206 
	mVÆOnHóp
;

207 
	mVÆOnSèck
;

208 
	mIsLVÆue
;

212 
	sTabÀE¡ry


214 
TabÀE¡ry
 *
	mNext
;

215 c⁄° *
	mDe˛FûeName
;

216 
	mDe˛Löe
;

217 
	mDe˛Cﬁumn
;

219 
	uTabÀE¡ryPaylﬂd


221 
	sVÆueE¡ry


223 *
	mKey
;

224 
VÆue
 *
	mVÆ
;

225 } 
	mv
;

227 
	mKey
[1];

228 } 
	mp
;

231 
	sTabÀ


233 
	mSize
;

234 
	mOnHóp
;

235 
TabÀE¡ry
 **
	mHashTabÀ
;

239 
	sSèckFøme


241 
P¨£Sèã
 
	mRëu∫P¨£r
;

242 c⁄° *
	mFuncName
;

243 
VÆue
 *
	mRëu∫VÆue
;

244 
VÆue
 **
	mP¨amëî
;

245 
	mNumP¨ams
;

246 
TabÀ
 
	mLoˇlTabÀ
;

247 
TabÀE¡ry
 *
	mLoˇlHashTabÀ
[
LOCAL_TABLE_SIZE
];

248 
SèckFøme
 *
	mPªviousSèckFøme
;

252 
	eLexMode


254 
	mLexModeN‹mÆ
,

255 
	mLexModeHashIn˛ude
,

256 
	mLexModeHashDeföe
,

257 
	mLexModeHashDeföeS∑˚
,

258 
	mLexModeHashDeföeS∑˚Idít


261 
	sLexSèã


263 c⁄° *
	mPos
;

264 c⁄° *
	mEnd
;

265 c⁄° *
	mFûeName
;

266 
	mLöe
;

267 
	mCh¨a˘îPos
;

268 c⁄° *
	mSour˚Text
;

269 
LexMode
 
	mMode
;

270 
	mEmôExåaNewlöes
;

274 
	sLibøryFun˘i⁄


276 (*
	mFunc
)(
P¨£Sèã
 *
	mP¨£r
, 
	mVÆue
 *, Value **, );

277 c⁄° *
	mPrŸŸy≥
;

281 
	uOuçutSåómInfo


283 
	sSåögOuçutSåóm


285 
P¨£Sèã
 *
	mP¨£r
;

286 *
	mWrôePos
;

287 } 
	mSå
;

291 
	tCh¨Wrôî
(, 
	tOuçutSåómInfo
 *);

294 
	sOuçutSåóm


296 
Ch¨Wrôî
 *
	mPutch
;

297 
OuçutSåómInfo
 
	mi
;

301 
	eP¨£Resu…
 { 
	mP¨£Resu…EOF
, 
	mP¨£Resu…Eº‹
, 
	mP¨£Resu…Ok
 };

304 *
HópSèckT›
;

305 
TabÀ
 
GlobÆTabÀ
;

306 
SèckFøme
 *
T›SèckFøme
;

307 
VÆueTy≥
 
UbîTy≥
;

308 
VÆueTy≥
 
I¡Ty≥
;

309 
VÆueTy≥
 
Ch¨Ty≥
;

310 #i‚de‡
NO_FP


311 
VÆueTy≥
 
FPTy≥
;

313 
VÆueTy≥
 
VoidTy≥
;

314 
VÆueTy≥
 
Ty≥Ty≥
;

315 
VÆueTy≥
 
Fun˘i⁄Ty≥
;

316 
VÆueTy≥
 
Ma¸oTy≥
;

317 
VÆueTy≥
 
GŸoLabñTy≥
;

318 
VÆueTy≥
 *
Ch¨PåTy≥
;

319 
VÆueTy≥
 *
Ch¨PåPåTy≥
;

320 
VÆueTy≥
 *
Ch¨AºayTy≥
;

321 
VÆueTy≥
 *
VoidPåTy≥
;

322 *
SåEm±y
;

323 
PoöãrVÆue
 
NULLPoöãr
;

324 
LibøryFun˘i⁄
 
CLibøry
[];

325 
LibøryFun˘i⁄
 
Pœtf‹mLibøry
[];

326 
IOFILE
 *
CStdOut
;

329 
TabÀInô
();

330 *
TabÀSåRegi°î
(c⁄° *
Så
);

331 *
TabÀSåRegi°î2
(c⁄° *
Så
, 
Lí
);

332 
TabÀInôTabÀ
(
TabÀ
 *
Tbl
, 
TabÀE¡ry
 **
HashTabÀ
, 
Size
, 
OnHóp
);

333 
TabÀSë
(
TabÀ
 *
Tbl
, *
Key
, 
VÆue
 *
VÆ
, c⁄° *
De˛FûeName
, 
De˛Löe
, 
De˛Cﬁumn
);

334 
TabÀGë
(
TabÀ
 *
Tbl
, c⁄° *
Key
, 
VÆue
 **
VÆ
, c⁄° **
De˛FûeName
, *
De˛Löe
, *
De˛Cﬁumn
);

335 
VÆue
 *
TabÀDñëe
(
TabÀ
 *
Tbl
, c⁄° *
Key
);

336 *
TabÀSëIdítifõr
(
TabÀ
 *
Tbl
, c⁄° *
Idít
, 
IdítLí
);

337 
TabÀSåFªe
();

340 
LexInô
();

341 
LexCÀ™up
();

342 *
LexA«ly£
(c⁄° *
FûeName
, c⁄° *
Sour˚
, 
Sour˚Lí
, *
TokíLí
);

343 
LexInôP¨£r
(
P¨£Sèã
 *
P¨£r
, c⁄° *
Sour˚Text
, *
TokíSour˚
, c⁄° *
FûeName
, 
RunIt
);

344 
LexTokí
 
LexGëTokí
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 **VÆue, 
IncPos
);

345 
LexTokí
 
LexRawPìkTokí
(
P¨£Sèã
 *
P¨£r
);

346 
LexToEndOfLöe
(
P¨£Sèã
 *
P¨£r
);

347 *
LexC›yTokís
(
P¨£Sèã
 *
SèπP¨£r
, P¨£Sèã *
EndP¨£r
);

348 
LexI¡îa˘iveCÀ¨
(
P¨£Sèã
 *
P¨£r
);

349 
LexI¡îa˘iveCom∂ëed
(
P¨£Sèã
 *
P¨£r
);

350 
LexI¡îa˘iveSèãmítProm±
();

356 
P¨£Resu…
 
P¨£Sèãmít
(
P¨£Sèã
 *
P¨£r
, 
CheckTøûögSemicﬁ⁄
);

357 
VÆue
 *
P¨£Fun˘i⁄Deföôi⁄
(
P¨£Sèã
 *
P¨£r
, 
VÆueTy≥
 *
Rëu∫Ty≥
, *
Idítifõr
);

358 
P¨£CÀ™up
();

359 
P¨£rC›yPos
(
P¨£Sèã
 *
To
, P¨£Sèã *
From
);

360 
P¨£rC›y
(
P¨£Sèã
 *
To
, P¨£Sèã *
From
);

363 
Ex¥essi⁄P¨£
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 **
Resu…
);

364 
Ex¥essi⁄P¨£I¡
(
P¨£Sèã
 *
P¨£r
);

365 
Ex¥essi⁄Assign
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
De°VÆue
, VÆuê*
Sour˚VÆue
, 
F‹˚
, c⁄° *
FuncName
, 
P¨amNo
, 
AŒowPoöãrC€rci⁄
);

366 
Ex¥essi⁄C€r˚I¡egî
(
VÆue
 *
VÆ
);

367 
Ex¥essi⁄C€r˚Unsig√dI¡egî
(
VÆue
 *
VÆ
);

368 #i‚de‡
NO_FP


369 
Ex¥essi⁄C€r˚FP
(
VÆue
 *
VÆ
);

373 
Ty≥Inô
();

374 
Ty≥CÀ™up
();

375 
Ty≥Size
(
VÆueTy≥
 *
Typ
, 
AºaySize
, 
Com∑˘
);

376 
Ty≥SizeVÆue
(
VÆue
 *
VÆ
, 
Com∑˘
);

377 
Ty≥SèckSizeVÆue
(
VÆue
 *
VÆ
);

378 
Ty≥La°Ac˚ssibÀOff£t
(
VÆue
 *
VÆ
);

379 
Ty≥P¨£Fr⁄t
(
P¨£Sèã
 *
P¨£r
, 
VÆueTy≥
 **
Typ
, *
IsSètic
);

380 
Ty≥P¨£IdítP¨t
(
P¨£Sèã
 *
P¨£r
, 
VÆueTy≥
 *
BasicTyp
, VÆueTy≥ **
Typ
, **
Idítifõr
);

381 
Ty≥P¨£
(
P¨£Sèã
 *
P¨£r
, 
VÆueTy≥
 **
Typ
, **
Idítifõr
, *
IsSètic
);

382 
VÆueTy≥
 *
Ty≥GëM©chög
(
P¨£Sèã
 *
P¨£r
, VÆueTy≥ *
P¨ítTy≥
, 
Ba£Ty≥
 
Ba£
, 
AºaySize
, c⁄° *
Idítifõr
, 
AŒowDu∂iˇãs
);

383 
VÆueTy≥
 *
Ty≥Cª©eO∑queSåu˘
(
P¨£Sèã
 *
P¨£r
, c⁄° *
Såu˘Name
, 
Size
);

386 
HópInô
(
SèckSize
);

387 
HópCÀ™up
();

388 *
HópAŒocSèck
(
Size
);

389 
HópP›Sèck
(*
Addr
, 
Size
);

390 
HópU≈›Sèck
(
Size
);

391 
HópPushSèckFøme
();

392 
HópP›SèckFøme
();

393 *
HópAŒocMem
(
Size
);

394 
HópFªeMem
(*
Mem
);

397 
V¨übÀInô
();

398 
V¨übÀCÀ™up
();

399 
V¨übÀFªe
(
VÆue
 *
VÆ
);

400 
V¨übÀTabÀCÀ™up
(
TabÀ
 *
HashTabÀ
);

401 *
V¨übÀAŒoc
(
P¨£Sèã
 *
P¨£r
, 
Size
, 
OnHóp
);

402 
V¨übÀSèckP›
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
V¨
);

403 
VÆue
 *
V¨übÀAŒocVÆueAndD©a
(
P¨£Sèã
 *
P¨£r
, 
D©aSize
, 
IsLVÆue
, VÆuê*
LVÆueFrom
, 
OnHóp
);

404 
VÆue
 *
V¨übÀAŒocVÆueAndC›y
(
P¨£Sèã
 *
P¨£r
, VÆuê*
FromVÆue
, 
OnHóp
);

405 
VÆue
 *
V¨übÀAŒocVÆueFromTy≥
(
P¨£Sèã
 *
P¨£r
, 
VÆueTy≥
 *
Typ
, 
IsLVÆue
, VÆuê*
LVÆueFrom
, 
OnHóp
);

406 
VÆue
 *
V¨übÀAŒocVÆueFromExi°ögD©a
(
P¨£Sèã
 *
P¨£r
, 
VÆueTy≥
 *
Typ
, 
AnyVÆue
 *
FromVÆue
, 
IsLVÆue
, VÆuê*
LVÆueFrom
);

407 
VÆue
 *
V¨übÀAŒocVÆueSh¨ed
(
P¨£Sèã
 *
P¨£r
, VÆuê*
FromVÆue
);

408 
VÆue
 *
V¨übÀDeföe
(
P¨£Sèã
 *
P¨£r
, *
Idít
, VÆuê*
InôVÆue
, 
VÆueTy≥
 *
Typ
, 
MakeWrôabÀ
);

409 
VÆue
 *
V¨übÀDeföeButIgn‹eIdítiˇl
(
P¨£Sèã
 *
P¨£r
, *
Idít
, 
VÆueTy≥
 *
Typ
, 
IsSètic
, *
Fú°Visô
);

410 
V¨übÀDeföed
(c⁄° *
Idít
);

411 
V¨übÀGë
(
P¨£Sèã
 *
P¨£r
, c⁄° *
Idít
, 
VÆue
 **
LVÆ
);

412 
V¨übÀDeföePœtf‹mV¨
(
P¨£Sèã
 *
P¨£r
, *
Idít
, 
VÆueTy≥
 *
Typ
, 
AnyVÆue
 *
FromVÆue
, 
IsWrôabÀ
);

413 
V¨übÀSèckFømeAdd
(
P¨£Sèã
 *
P¨£r
, c⁄° *
FuncName
, 
NumP¨ams
);

414 
V¨übÀSèckFømeP›
(
P¨£Sèã
 *
P¨£r
);

415 
VÆue
 *
V¨übÀSåögLôîÆGë
(*
Idít
);

416 
V¨übÀSåögLôîÆDeföe
(*
Idít
, 
VÆue
 *
VÆ
);

417 *
V¨übÀDîe„ªn˚Poöãr
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
PoöãrVÆue
, VÆuê**
DîefVÆ
, *
DîefOff£t
, 
VÆueTy≥
 **
DîefTy≥
, *
DîefIsLVÆue
);

420 
BasicIOInô
();

421 
LibøryInô
();

422 
LibøryAdd
(
TabÀ
 *
GlobÆTabÀ
, c⁄° *
LibøryName
, 
LibøryFun˘i⁄
 *
FuncLi°
);

423 
CLibøryInô
();

424 
PrötCh
(
OutCh
, 
IOFILE
 *
Såóm
);

425 
PrötSim∂eI¡
(
Num
, 
IOFILE
 *
Såóm
);

426 
PrötI¡
(
Num
, 
FõldWidth
, 
ZîoPad
, 
Le·Ju°ify
, 
IOFILE
 *
Såóm
);

427 
PrötSå
(c⁄° *
Så
, 
IOFILE
 *
Såóm
);

428 
PrötFP
(
Num
, 
IOFILE
 *
Såóm
);

429 
PrötTy≥
(
VÆueTy≥
 *
Typ
, 
IOFILE
 *
Såóm
);

430 
LibPrötf
(
P¨£Sèã
 *
P¨£r
, 
VÆue
 *
Rëu∫VÆue
, VÆuê**
P¨am
, 
NumArgs
);

440 
ProgømFaû
(
P¨£Sèã
 *
P¨£r
, c⁄° *
Mesßge
, ...);

441 
AssignFaû
(
P¨£Sèã
 *
P¨£r
, c⁄° *
F‹m©
, 
VÆueTy≥
 *
Ty≥1
, VÆueTy≥ *
Ty≥2
, 
Num1
, 
Num2
, c⁄° *
FuncName
, 
P¨amNo
);

442 
LexFaû
(
LexSèã
 *
Lexî
, c⁄° *
Mesßge
, ...);

443 
Pœtf‹mCÀ™up
();

444 *
Pœtf‹mGëLöe
(*
Buf
, 
MaxLí
, c⁄° *
Prom±
);

445 
Pœtf‹mGëCh¨a˘î
();

446 
Pœtf‹mPutc
(
OutCh
, 
OuçutSåómInfo
 *);

447 
Pœtf‹mEº‹Pªfix
(
P¨£Sèã
 *
P¨£r
);

448 
Pœtf‹mPrötf
(c⁄° *
F‹m©
, ...);

449 
Pœtf‹mVPrötf
(c⁄° *
F‹m©
, 
va_li°
 
Args
);

450 
Pœtf‹mExô
(
ExôVÆ
);

451 *
Pœtf‹mMakeTempName
(*
TempNameBuf„r
);

452 
Pœtf‹mLibøryInô
();

455 
In˛udeInô
();

456 
In˛udeCÀ™up
();

457 
In˛udeRegi°î
(c⁄° *
In˛udeName
, (*
SëupFun˘i⁄
)(), 
LibøryFun˘i⁄
 *
FuncLi°
, c⁄° *
SëupCSour˚
);

458 
	`In˛udeFûe
(*
Fûíame
);

463 c⁄° 
StdioDefs
[];

464 
LibøryFun˘i⁄
 
StdioFun˘i⁄s
[];

465 
	`StdioSëupFunc
();

468 
LibøryFun˘i⁄
 
M©hFun˘i⁄s
[];

469 
	`M©hSëupFunc
();

472 
LibøryFun˘i⁄
 
SåögFun˘i⁄s
[];

473 
	`SåögSëupFunc
();

476 
LibøryFun˘i⁄
 
StdlibFun˘i⁄s
[];

477 
	`StdlibSëupFunc
();

480 c⁄° 
StdTimeDefs
[];

481 
LibøryFun˘i⁄
 
StdTimeFun˘i⁄s
[];

482 
	`StdTimeSëupFunc
();

485 
	`StdEºnoSëupFunc
();

488 
LibøryFun˘i⁄
 
StdCty≥Fun˘i⁄s
[];

491 c⁄° 
StdboﬁDefs
[];

492 
	`StdboﬁSëupFunc
();

495 c⁄° 
Uni°dDefs
[];

496 
LibøryFun˘i⁄
 
Uni°dFun˘i⁄s
[];

497 
	`Uni°dSëupFunc
();

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
1
.
1
/usr/include
25
420
ctype.c
errno.c
math.c
stdbool.c
stdio.c
stdlib.c
string.c
time.c
unistd.c
../interpreter.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/limits.h
/usr/include/stdio.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
